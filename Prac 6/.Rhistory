head(rot)
head(RData)
?factor
bla<-c("a","b","a")
factor(bla,levels=c("a","b"),ordered=T)
factor(bla,levels=c("a","b"),ordered=F)
?sort
RData[order(RData$Population),]
RData[order(RData$Population,RData$Day),]
RData[order(RData$Population,RData$Day,RData$Copper),]
RData<-RData[order(RData$Population,RData$Day,RData$Copper),]
head(RData)
rot[29,]
rot[30,]
SE<-function(x)sqrt(var(x)/length(x))
SE(temp$RData.Total_all[temp$RData.Population=='Commercial' & temp$RData.Day==2])
temp
SE(temp$RData.Total_all[(temp$RData.Population=='Commercial' & temp$RData.Day==2)])
SE(temp$RData.Total_all[(temp$RData.Population=='Commercial' && temp$RData.Day==2)])
Tot_mean<-data.frame(aggregate(RData$Total_all ~ RData$Day+ RData$Population + RData$Copper, data=RData, SE))
Tot_mean<-data.frame(aggregate(RData$Total_all, by=list(RData$Day,RData$Population,RData$Copper), data=RData, SE))
Tot_mean<-data.frame(aggregate(RData$Total_all, by=list(RData$Day,RData$Population,RData$Copper), data=RData, mean))
Tot_mean<-data.frame(aggregate(RData$Total_all ~ RData$Day+ RData$Population + RData$Copper, data=RData, mean))
Tot_mean<-data.frame(aggregate(RData$Total_all ~ RData$Day+ RData$Population + RData$Copper, data=RData, mean))
aggregate(RData$Total_all ~ RData$Day+ RData$Population + RData$Copper, data=RData, mean)
RData
RData$Total_all<-RData$Alive_Juv + RData$Alive_Adult
aggregate(RData$Total_all ~ RData$Day+ RData$Population + RData$Copper, data=RData, mean)
Tot_mean<-data.frame(aggregate(RData$Total_all ~ RData$Day+ RData$Population + RData$Copper, data=RData, mean))
Tot_mean<-data.frame(aggregate(RData$Total_all ~ RData$Day+ RData$Population + RData$Copper, data=RData, SE))
Tot_mean
?aggregate
colnames(Tot_mean)
colnames(Tot_mean)[4]<-"SE"
head(Tot_mean)
y<-matrix(c(1,2,3,4,5,6),ncol=3)
x<-1:3
plot(x,y)
x<-matrix(1:6,ncol=3)
plot(x,y)
temp<-subset(Tot_mean,RData.Copper=='low')
temp
install.packages(sciplot)
install.packages('sciplot')
library(sciplot)
lineplot.CI(RData$Day[RData$Copper=='low'],RData$Total_all[RData$Copper=='low'],
group=RData$Population[RData$Copper=='low'],fixed=T, ylim=c(0,26),
xlab="Day",ylab="Total population size")
text(1,24, "low copper")
lineplot.CI(RData$Day[RData$Copper=='medium'],RData$Total_all[RData$Copper=='medium'],
group=RData$Population[RData$Copper=='medium'],fixed=T, ylim=c(0,26),
xlab="Day",ylab="Total population size")
text(1,24, "medium copper")
lineplot.CI(RData$Day[RData$Copper=='high'],RData$Total_all[RData$Copper=='high'],
group=RData$Population[RData$Copper=='high'],fixed=T, ylim=c(0,26),
xlab="Day",ylab="Total population size")
text(1,24, "high copper")
library(sciplot)
lineplot.CI(RData$Day[RData$Copper=='low'],RData$Total_all[RData$Copper=='low'],
group=RData$Population[RData$Copper=='low'],fixed=T, ylim=c(0,26),
xlab="Day",ylab="Total population size")
text(1,24, "low copper")
lineplot.CI(RData$Day[RData$Copper=='medium'],RData$Total_all[RData$Copper=='medium'],
group=RData$Population[RData$Copper=='medium'],fixed=T, ylim=c(0,26),
xlab="Day",ylab="Total population size")
text(1,24, "medium copper")
lineplot.CI(RData$Day[RData$Copper=='high'],RData$Total_all[RData$Copper=='high'],
group=RData$Population[RData$Copper=='high'],fixed=T, ylim=c(0,26),
xlab="Day",ylab="Total population size")
text(1,24, "high copper")
lineplot.CI(RData$Day[RData$Copper=='low'],RData$Total_all[RData$Copper=='low'],
group=RData$Population[RData$Copper=='low'],fixed=F, ylim=c(0,26),
xlab="Day",ylab="Total population size")
?var
###################### For the students ##########################
# To always have your Copper data ordered from low to high
# And to always have your populations chronologically ordered
RData$Copper=factor(RData$Copper,levels=c('low','medium','high'),ordered=T)
RData$Population=factor(RData$Population, levels=c('Commercial','Postpollution','Recovery','Pollution'), ordered=T)
# Quickly have some overview over your data in numbers on your console
RData$Total_all<-RData$Alive_Juv + RData$Alive_Adult
aggregate(RData$Total_all ~ RData$Day+ RData$Population + RData$Copper, data=RData, mean)
#Perhaps exercise for students to change the order in the data frame?
# These numbers can be a bit overwhelming, so let's inspect them visually
# See the total population size changes over the days
# Because we have three days, we want the three graphs below each other
Tot_mean<-data.frame(aggregate(RData$Total_all ~ RData$Day+ RData$Population + RData$Copper, data=RData, mean))
# But also want to add the standard errors
# So calculate them first
SE<-function(x)sqrt(var(x)/length(x))
Tot_SE<-data.frame(aggregate(RData$Total_all ~ RData$Day+ RData$Population + RData$Copper, data=RData, SE))
colnames(Tot_SE)[4]<-"SE"
together<-merge(Tot_mean,Tot_SE)
#And now the graphs
par(mfrow=c(3,1))
temp<-subset(together,together$RData.Copper=='low')
plot(0,0,
type="n", xlab="Day",ylab="Total population size",xlim=c(1,3),ylim=c(0,26),axes=FALSE, main="Low copper treatment")
axis(side=1,at=c(1,2,3))
axis(side=2, at=c(0,5,10,15,20,25,30))
lev<-levels(temp[,2])
cols<-rainbow(length(lev))
syms<-1:4
for(i in 1:length(lev)){
lines(temp$RData.Day[temp$RData.Population==lev[i]],temp$RData.Total_all[temp$RData.Population==lev[i]],col=cols[i],"b",pch=syms[i])
arrows(c(1,2,3),(temp$RData.Total_all[temp$RData.Population==lev[i]]-c(temp$SE[temp$RData.Population==lev[i]])),
c(1,2,3),(temp$RData.Total_all[temp$RData.Population==lev[i]]+c(temp$SE[temp$RData.Population==lev[i]])),code=3,angle=90,col=cols[i],length=0.1)
}
legend(1, 24, col=cols,legend=lev, lty=1, pch=syms)
temp1<-subset(together,together$RData.Copper=='medium')
plot(0,0,
type="n", xlab="Day",ylab="Total population size",xlim=c(1,3),ylim=c(0,26),axes=FALSE, main="Medium copper treatment")
axis(side=1,at=c(1,2,3))
axis(side=2, at=c(0,5,10,15,20,25,30))
lev<-levels(temp[,2])
cols<-rainbow(length(lev))
syms<-1:4
for(i in 1:length(lev)){
lines(temp1$RData.Day[temp1$RData.Population==lev[i]],temp1$RData.Total_all[temp1$RData.Population==lev[i]],col=cols[i],"b",pch=syms[i])
arrows(c(1,2,3),(temp1$RData.Total_all[temp1$RData.Population==lev[i]]-c(temp1$SE[temp$RData.Population==lev[i]])),
c(1,2,3),(temp1$RData.Total_all[temp1$RData.Population==lev[i]]+c(temp1$SE[temp$RData.Population==lev[i]])),code=3,angle=90,col=cols[i],length=0.1)
}
legend(1, 24, col=cols,legend=lev, lty=1, pch=syms)
temp2<-subset(together,together$RData.Copper=='high')
plot(0,0,
type="n", xlab="Day",ylab="Total population size",xlim=c(1,3),ylim=c(0,26),axes=FALSE, main="High copper treatment")
axis(side=1,at=c(1,2,3))
axis(side=2, at=c(0,5,10,15,20,25,30))
lev<-levels(temp[,2])
cols<-rainbow(length(lev))
syms<-1:4
for(i in 1:length(lev)){
lines(temp2$RData.Day[temp2$RData.Population==lev[i]],temp2$RData.Total_all[temp2$RData.Population==lev[i]],col=cols[i],"b",pch=syms[i])
arrows(c(1,2,3),(temp2$RData.Total_all[temp2$RData.Population==lev[i]]-c(temp2$SE[temp$RData.Population==lev[i]])),
c(1,2,3),(temp2$RData.Total_all[temp2$RData.Population==lev[i]]+c(temp2$SE[temp$RData.Population==lev[i]])),code=3,angle=90,col=cols[i],length=0.1)
}
legend(1, 24, col=cols,legend=lev, lty=1, pch=syms)
# A faster way to do this is using lineplot.CI from the package {sciplot}
# Think about what the warning messages mean
library(sciplot)
lineplot.CI(RData$Day[RData$Copper=='low'],RData$Total_all[RData$Copper=='low'],
group=RData$Population[RData$Copper=='low'],fixed=T, ylim=c(0,26),
xlab="Day",ylab="Total population size", main="Low copper treatment")
lineplot.CI(RData$Day[RData$Copper=='medium'],RData$Total_all[RData$Copper=='medium'],
group=RData$Population[RData$Copper=='medium'],fixed=T, ylim=c(0,26),
xlab="Day",ylab="Total population size", main="Medium copper treatment")
lineplot.CI(RData$Day[RData$Copper=='high'],RData$Total_all[RData$Copper=='high'],
group=RData$Population[RData$Copper=='high'],fixed=T, ylim=c(0,26),
xlab="Day",ylab="Total population size", main="High copper treatment")
# To always have your Copper data ordered from low to high
# And to always have your populations chronologically ordered
RData$Copper=factor(RData$Copper,levels=c('low','medium','high'),ordered=T)
RData$Population=factor(RData$Population, levels=c('Commercial','Postpollution','Recovery','Pollution'), ordered=T)
# Quickly have some overview over your data in numbers on your console
RData$Total_all<-RData$Alive_Juv + RData$Alive_Adult
aggregate(RData$Total_all ~ RData$Day+ RData$Population + RData$Copper, data=RData, mean)
#Perhaps exercise for students to change the order in the data frame?
# These numbers can be a bit overwhelming, so let's inspect them visually
# See the total population size changes over the days
# Because we have three days, we want the three graphs below each other
Tot_mean<-data.frame(aggregate(RData$Total_all ~ RData$Day+ RData$Population + RData$Copper, data=RData, mean))
# But also want to add the standard errors
# So calculate them first
SE<-function(x)sqrt(var(x)/length(x))
Tot_SE<-data.frame(aggregate(RData$Total_all ~ RData$Day+ RData$Population + RData$Copper, data=RData, SE))
colnames(Tot_SE)[4]<-"SE"
together<-merge(Tot_mean,Tot_SE)
#And now the graphs
par(mfrow=c(3,1))
temp<-subset(together,together$RData.Copper=='low')
plot(0,0,
type="n", xlab="Day",ylab="Total population size",xlim=c(1,3),ylim=c(0,26),axes=FALSE, main="Low copper treatment")
axis(side=1,at=c(1,2,3))
axis(side=2, at=c(0,5,10,15,20,25,30))
lev<-levels(temp[,2])
cols<-rainbow(length(lev))
syms<-1:4
for(i in 1:length(lev)){
lines(temp$RData.Day[temp$RData.Population==lev[i]],temp$RData.Total_all[temp$RData.Population==lev[i]],col=cols[i],"b",pch=syms[i])
arrows(c(1,2,3),(temp$RData.Total_all[temp$RData.Population==lev[i]]-c(temp$SE[temp$RData.Population==lev[i]])),
c(1,2,3),(temp$RData.Total_all[temp$RData.Population==lev[i]]+c(temp$SE[temp$RData.Population==lev[i]])),code=3,angle=90,col=cols[i],length=0.1)
}
legend(1, 24, col=cols,legend=lev, lty=1, pch=syms)
temp1<-subset(together,together$RData.Copper=='medium')
plot(0,0,
type="n", xlab="Day",ylab="Total population size",xlim=c(1,3),ylim=c(0,26),axes=FALSE, main="Medium copper treatment")
axis(side=1,at=c(1,2,3))
axis(side=2, at=c(0,5,10,15,20,25,30))
lev<-levels(temp[,2])
cols<-rainbow(length(lev))
syms<-1:4
for(i in 1:length(lev)){
lines(temp1$RData.Day[temp1$RData.Population==lev[i]],temp1$RData.Total_all[temp1$RData.Population==lev[i]],col=cols[i],"b",pch=syms[i])
arrows(c(1,2,3),(temp1$RData.Total_all[temp1$RData.Population==lev[i]]-c(temp1$SE[temp$RData.Population==lev[i]])),
c(1,2,3),(temp1$RData.Total_all[temp1$RData.Population==lev[i]]+c(temp1$SE[temp$RData.Population==lev[i]])),code=3,angle=90,col=cols[i],length=0.1)
}
legend(1, 24, col=cols,legend=lev, lty=1, pch=syms)
temp2<-subset(together,together$RData.Copper=='high')
plot(0,0,
type="n", xlab="Day",ylab="Total population size",xlim=c(1,3),ylim=c(0,26),axes=FALSE, main="High copper treatment")
axis(side=1,at=c(1,2,3))
axis(side=2, at=c(0,5,10,15,20,25,30))
lev<-levels(temp[,2])
cols<-rainbow(length(lev))
syms<-1:4
for(i in 1:length(lev)){
lines(temp2$RData.Day[temp2$RData.Population==lev[i]],temp2$RData.Total_all[temp2$RData.Population==lev[i]],col=cols[i],"b",pch=syms[i])
arrows(c(1,2,3),(temp2$RData.Total_all[temp2$RData.Population==lev[i]]-c(temp2$SE[temp$RData.Population==lev[i]])),
c(1,2,3),(temp2$RData.Total_all[temp2$RData.Population==lev[i]]+c(temp2$SE[temp$RData.Population==lev[i]])),code=3,angle=90,col=cols[i],length=0.1)
}
legend(1, 24, col=cols,legend=lev, lty=1, pch=syms)
par(mfrow=c(3,1))
for(j in levels(together$RData.Copper)){
temp<-subset(together,together$RData.Copper==j)
plot(0,0,type="n", xlab="Day",ylab="Total population size",xlim=c(1,3),ylim=c(0,26),axes=FALSE, main=paste(j,"copper treatment"))
axis(side=1,at=c(1,2,3))
axis(side=2, at=c(0,5,10,15,20,25,30))
lev<-levels(temp[,2])
cols<-rainbow(length(lev))
syms<-1:4
for(i in 1:length(lev)){
lines(temp$RData.Day[temp$RData.Population==lev[i]],temp$RData.Total_all[temp$RData.Population==lev[i]],col=cols[i],"b",pch=syms[i])
arrows(c(1,2,3),(temp$RData.Total_all[temp$RData.Population==lev[i]]-c(temp$SE[temp$RData.Population==lev[i]])),
c(1,2,3),(temp$RData.Total_all[temp$RData.Population==lev[i]]+c(temp$SE[temp$RData.Population==lev[i]])),code=3,angle=90,col=cols[i],length=0.1)
}
legend(1, 24, col=cols,legend=lev, lty=1, pch=syms)
}
pdf('bla.pdf')
par(mfrow=c(3,1))
temp<-subset(Tot_mean,RData.Copper=='low')
plot(0,0,
type="n", xlab="Day",ylab="Total population size",xlim=c(1,3),ylim=c(0,25),axes=FALSE)
axis(side=1,at=c(1,2,3))
lev<-levels(temp[,2])
cols<-rainbow(length(lev))
syms<-1:4
for(i in 1:length(lev)){
lines(temp$RData.Day[temp$RData.Population==lev[i]],temp$RData.Total_all[temp$RData.Population==lev[i]],col=cols[i],"b",pch=syms[i])
arrows(c(1,2,3),(temp$RData.Total_all[temp$RData.Population==lev[i]]-c(1,2,12)),c(1,2,3),(temp$RData.Total_all[temp$RData.Population==lev[i]]+c(2,4,2)),code=3,angle=90,col=cols[i],length=0.1)
}
dev.off()
pdf('bla.pdf')
for(j in levels(together$RData.Copper)){
temp<-subset(together,together$RData.Copper==j)
plot(0,0,type="n", xlab="Day",ylab="Total population size",xlim=c(1,3),ylim=c(0,26),axes=FALSE, main=paste(j,"copper treatment"))
axis(side=1,at=c(1,2,3))
axis(side=2, at=c(0,5,10,15,20,25,30))
lev<-levels(temp[,2])
cols<-rainbow(length(lev))
syms<-1:4
for(i in 1:length(lev)){
lines(temp$RData.Day[temp$RData.Population==lev[i]],temp$RData.Total_all[temp$RData.Population==lev[i]],col=cols[i],"b",pch=syms[i])
arrows(c(1,2,3),(temp$RData.Total_all[temp$RData.Population==lev[i]]-c(temp$SE[temp$RData.Population==lev[i]])),
c(1,2,3),(temp$RData.Total_all[temp$RData.Population==lev[i]]+c(temp$SE[temp$RData.Population==lev[i]])),code=3,angle=90,col=cols[i],length=0.1)
}
legend(1, 24, col=cols,legend=lev, lty=1, pch=syms)
}
dev.off()
?legend
?str
str(rot)
?summary
head(rot,10)
tail(rot,10)
aggregate(rot$Alive_Juv,by=list(rot$Population,rot$Copper),mean)
aggregate(rot$Alive_Juv,by=list(Population,Copper),mean)
aggregate(rot$Alive_Juv,by=list(rot$Population,rot$Copper),max)
aggregate(rot$Alive_Juv,by=list(rot$Population,rot$Copper),min)
aggregate(rot$Alive_Juv,by=list(rot$Population,rot$Copper),median)
aggregate(rot$Alive_Juv,by=list(rot$Population,rot$Copper),sd)
aggregate(rot$Alive_Juv,by=list(rot$Population,rot$Copper),se)
?se
SE<-function(x)sqrt(var(x)/length(x))
aggregate(rot$Alive_Juv,by=list(rot$Population,rot$Copper),SE)
aggregate(rot$Alive_Juv,by=list(rot$Population,rot$Copper),mean)
rot_cop<-aggregate(rot$Alive_Juv,by=list(rot$Copper),mean)
rot_cop
head(rot)
plot(rot_copp$group.1,rot_copp$x,xlab="Copper treatment",ylab="Total individuals alive")
rot_copp<-aggregate(rot$Alive_Juv,by=list(rot$Copper),mean)
plot(rot_copp$group.1,rot_copp$x,xlab="Copper treatment",ylab="Total individuals alive")
rot_copp<-data.frame(aggregate(rot$Alive_Juv,by=list(rot$Copper),mean))
rot_copp$group.1<-factor(rot$group.1,levels=c("low","medium","high"))
plot(rot_copp$group.1,rot_copp$x,xlab="Copper treatment",ylab="Total individuals alive")
rot_copp$group.1<-factor(rot$group.1,levels=c("low","medium","high"),ordered=T)
rot_copp
rot_copp$group.1
temp<-subset(rot,Copper=='low')
temp
Tot_mean<-aggregate(temp,by=list(Population))
Tot_mean<-aggregate(temp,by=list(Population),mean)
Tot_mean<-aggregate(temp,by=list(temp$Population),mean)
warnings()
Tot_mean
Tot_mean<-aggregate(temp$Total,by=list(temp$Population),mean)
temp
rot$Total<-rot$Alive_Juv+rot$Alive_Adult
Tot_mean<-aggregate(temp$Total,by=list(temp$Population),mean)
temp<-subset(rot,Copper=='low')
Tot_mean<-aggregate(temp$Total,by=list(temp$Population),mean)
Tot_mean
Tot_mean<-aggregate(temp$Total,by=list(temp$Population,temp$Day),mean)
Tot_mean<-aggregate(temp$Total,by=list(temp$Population,temp$Day),mean)
Tot_mean
?aggregate
plot(0,0,type="n",xlab="Day",
ylab="Total population size",main="Low copper treatment",
axes=FALSE,xlim=c(1,3),ylim=c(0,30))
axis(side=1,at=c(1,2,3))
axis(side=2, at=c(0,5,10,15,20,25,30))
plot(0,0,type="n",xlab="Day",
ylab="Total population size",main="Low copper treatment")
temp2<-subset(temp,Group.1=="Commercial")
lines(temp2$Group.2,x,col='red',pch=1,lty="b")
plot(0,0,type="n",xlab="Day",
ylab="Total population size",main="Low copper treatment",
axes=FALSE,xlim=c(1,3),ylim=c(0,30))
axis(side=1,at=c(1,2,3))
axis(side=2, at=c(0,5,10,15,20,25,30))
plot(0,0,type="n",xlab="Day",
ylab="Total population size",main="Low copper treatment")
temp2<-subset(temp,Group.1=="Commercial")
lines(temp2$Group.2,temp2$x,col='red',pch=1,lty="b")
@
plot(0,0,type="n",xlab="Day",
ylab="Total population size",main="Low copper treatment",
axes=FALSE,xlim=c(1,3),ylim=c(0,30))
axis(side=1,at=c(1,2,3))
axis(side=2, at=c(0,5,10,15,20,25,30))
plot(0,0,type="n",xlab="Day",
ylab="Total population size",main="Low copper treatment")
temp2<-subset(temp,Group.1=="Commercial")
lines(temp2$Group.2,temp2$x,col='red',pch=1,lty="b")
plot(0,0,type="n",xlab="Day",
ylab="Total population size",main="Low copper treatment",
axes=FALSE,xlim=c(1,3),ylim=c(0,30))
axis(side=1,at=c(1,2,3))
axis(side=2, at=c(0,5,10,15,20,25,30))
temp2<-subset(temp,Group.1=="Commercial")
lines(temp2$Group.2,temp2$x,col='red',pch=1,lty="b")
plot(0,0,type="n",xlab="Day",
ylab="Total population size",main="Low copper treatment",
axes=FALSE,xlim=c(1,3),ylim=c(0,30))
axis(side=1,at=c(1,2,3))
axis(side=2, at=c(0,5,10,15,20,25,30))
temp2<-subset(temp,Group.1=="Commercial")
lines(temp2$Group.2,temp2$x,col='red',pch=1,type="b")
plot(0,0,type="n",xlab="Day",
ylab="Total population size",main="Low copper treatment",
axes=FALSE,xlim=c(1,3),ylim=c(0,30))
axis(side=1,at=c(1,2,3))
axis(side=2, at=c(0,5,10,15,20,25,30))
temp2<-subset(temp,Group.1=="Commercial")
lines(temp2$Group.2,temp2$x,col='red',pch=1,type="b")
temp2
temp<-subset(rot,Copper=='low')
temp2<-subset(temp,Group.1=="Commercial")
temp
temp2<-subset(Tot_mean,Group.1=="Commercial")
lines(temp2$Group.2,temp2$x,col='red',pch=1,type="b")
plot(0,0,type="n",xlab="Day",
ylab="Total population size",main="Low copper treatment",
axes=FALSE,xlim=c(1,3),ylim=c(0,30))
axis(side=1,at=c(1,2,3))
axis(side=2, at=c(0,5,10,15,20,25,30))
temp2<-subset(Tot_mean,Group.1=="Commercial")
lines(temp2$Group.2,temp2$x,col='red',pch=1,type="b")
temp2<-subset(Tot_mean,Group.1=="Postpollution")
lines(temp2$Group.2,temp2$x,col='blue',pch=1,type="b")
temp2<-subset(Tot_mean,Group.1=="Recovery")
lines(temp2$Group.2,temp2$x,col='green',pch=1,type="b")
temp2<-subset(Tot_mean,Group.1=="Pollution")
lines(temp2$Group.2,temp2$x,col='orange',pch=1,type="b")
plot(0,0,type="n",xlab="Day",
ylab="Total population size",main="Low copper treatment",
axes=FALSE,xlim=c(1,3),ylim=c(0,30))
axis(side=1,at=c(1,2,3))
axis(side=2, at=c(0,5,10,15,20,25,30))
temp2<-subset(Tot_mean,Group.1=="Commercial")
temp3<-subset(SE_tot,Group.1="Commercial")
lines(temp2$Group.2,temp2$x,col='red',pch=1,type="b")
arrows(temp3$Group.2,temp2$x-temp3$x,temp3$Group.2,temp2$x+temp3$x,angle=90,length=0.1,col='red')
SE_tot<-aggregate(temp$Total,by=list(temp$Population,temp$Day),SE)
plot(0,0,type="n",xlab="Day",
ylab="Total population size",main="Low copper treatment",
axes=FALSE,xlim=c(1,3),ylim=c(0,30))
axis(side=1,at=c(1,2,3))
axis(side=2, at=c(0,5,10,15,20,25,30))
temp2<-subset(Tot_mean,Group.1=="Commercial")
temp3<-subset(SE_tot,Group.1="Commercial")
lines(temp2$Group.2,temp2$x,col='red',pch=1,type="b")
arrows(temp3$Group.2,temp2$x-temp3$x,temp3$Group.2,temp2$x+temp3$x,angle=90,length=0.1,col='red')
temp2
temp2
temp3
SE_tot
temp3<-subset(SE_tot,Group.1="Commercial")
temp3
temp3$Group.1=="Commercial"
temp3<-subset(SE_tot,Group.1=="Commercial")
lines(temp2$Group.2,temp2$x,col='red',pch=1,type="b")
arrows(temp3$Group.2,temp2$x-temp3$x,temp3$Group.2,temp2$x+temp3$x,angle=90,length=0.1,col='red')
plot(0,0,type="n",xlab="Day",
ylab="Total population size",main="Low copper treatment",
axes=FALSE,xlim=c(1,3),ylim=c(0,30))
axis(side=1,at=c(1,2,3))
axis(side=2, at=c(0,5,10,15,20,25,30))
temp2<-subset(Tot_mean,Group.1=="Commercial")
temp3<-subset(SE_tot,Group.1=="Commercial")
lines(temp2$Group.2,temp2$x,col='red',pch=1,type="b")
arrows(temp3$Group.2,temp2$x-temp3$x,temp3$Group.2,temp2$x+temp3$x,angle=90,length=0.1,col='red')
temp2
temp3
?arrows
RData<-rot
RData$Copper=factor(RData$Copper,levels=c('low','medium','high'),ordered=T)
RData$Population=factor(RData$Population, levels=c('Commercial','Postpollution','Recovery','Pollution'), ordered=T)
# Quickly have some overview over your data in numbers on your console
RData$Total_all<-RData$Alive_Juv + RData$Alive_Adult
# But also want to add the standard errors
# So calculate them first
SE<-function(x)sqrt(var(x)/length(x))
Tot_SE<-data.frame(aggregate(RData$Total_all ~ RData$Day+ RData$Population + RData$Copper, data=RData, SE))
colnames(Tot_SE)[4]<-"SE"
together<-merge(Tot_mean,Tot_SE)
par(mar=c(6,6,2,2))
for(j in levels(together$RData.Copper)){
temp<-subset(together,together$RData.Copper==j)
plot(0,0,type="n", xlab="Day",ylab="Total population size",xlim=c(1,3),ylim=c(0,26),axes=FALSE, main=paste(j,"copper treatment"))
axis(side=1,at=c(1,2,3))
axis(side=2, at=c(0,5,10,15,20,25,30))
lev<-levels(temp[,2])
cols<-rainbow(length(lev))
syms<-1:4
for(i in 1:length(lev)){
lines(temp$RData.Day[temp$RData.Population==lev[i]],temp$RData.Total_all[temp$RData.Population==lev[i]],col=cols[i],"b",pch=syms[i])
arrows(c(1,2,3),(temp$RData.Total_all[temp$RData.Population==lev[i]]-c(temp$SE[temp$RData.Population==lev[i]])),
c(1,2,3),(temp$RData.Total_all[temp$RData.Population==lev[i]]+c(temp$SE[temp$RData.Population==lev[i]])),code=3,angle=90,col=cols[i],length=0.1)
}
legend(1, 24, col=cols,legend=lev, lty=1, pch=syms,bty="n")
}
RData<-rot
RData$Copper=factor(RData$Copper,levels=c('low','medium','high'),ordered=T)
RData$Population=factor(RData$Population, levels=c('Commercial','Postpollution','Recovery','Pollution'), ordered=T)
# Quickly have some overview over your data in numbers on your console
RData$Total_all<-RData$Alive_Juv + RData$Alive_Adult
Tot_mean<-data.frame(aggregate(RData$Total_all ~ RData$Day+ RData$Population + RData$Copper, data=RData, mean))
# But also want to add the standard errors
# So calculate them first
SE<-function(x)sqrt(var(x)/length(x))
Tot_SE<-data.frame(aggregate(RData$Total_all ~ RData$Day+ RData$Population + RData$Copper, data=RData, SE))
colnames(Tot_SE)[4]<-"SE"
together<-merge(Tot_mean,Tot_SE)
#And now the graphs
par(mar=c(6,6,2,2))
for(j in levels(together$RData.Copper)){
temp<-subset(together,together$RData.Copper==j)
plot(0,0,type="n", xlab="Day",ylab="Total population size",xlim=c(1,3),ylim=c(0,26),axes=FALSE, main=paste(j,"copper treatment"))
axis(side=1,at=c(1,2,3))
axis(side=2, at=c(0,5,10,15,20,25,30))
lev<-levels(temp[,2])
cols<-rainbow(length(lev))
syms<-1:4
for(i in 1:length(lev)){
lines(temp$RData.Day[temp$RData.Population==lev[i]],temp$RData.Total_all[temp$RData.Population==lev[i]],col=cols[i],"b",pch=syms[i])
arrows(c(1,2,3),(temp$RData.Total_all[temp$RData.Population==lev[i]]-c(temp$SE[temp$RData.Population==lev[i]])),
c(1,2,3),(temp$RData.Total_all[temp$RData.Population==lev[i]]+c(temp$SE[temp$RData.Population==lev[i]])),code=3,angle=90,col=cols[i],length=0.1)
}
legend(1, 24, col=cols,legend=lev, lty=1, pch=syms,bty="n")
}
age1<-c(10, 16, 38)
offa1<-c(16, 26, 61)
F1<-offa1/offa1
F1
F1<-offa1/age1
F+
>
F1
mean(F1)
multilply(F1)
product(F1)
prod(F1)
prod(F1)^3
prod(F1)^(-3)
prod(F1)^(1/3)
?mean
age2<-c(8, 13) #individuals in age class 2 in time t
offa2<-c(12, 19) #offspring in time t+1 produced by age class 2
F2<-offa2/age2 #yearly fertility rate
prod(F2)^(1/3) #geometric mean of fertility, F2
8*1.5
13*1.5
age2<-c(8, 13) #individuals in age class 2 in time t
offa2<-c(12, 19.5) #offspring in time t+1 produced by age class 2
F2<-offa2/age2 #yearly fertility rate
prod(F2)^(1/3) #geometric mean of fertility, F2
age2<-c(8, 13) #individuals in age class 2 in time t
offa2<-c(12, 19) #offspring in time t+1 produced by age class 2
F2<-offa2/age2 #yearly fertility rate
prod(F2)^(1/2) #geometric mean of fertility, F2
(10/16)*(38/16)
age1<-c(10, 16, 38) #individuals in age class 1 in time t
age2<-c(8, 13, 30) #individuals in age class 2 in time t+1
#(i.e. the sruviving individuals from age class 1 in t)
p1<-age2/age1 #yearly survival rate
P1<-prod(p1)^(1/3)
P1
age2<-c(8, 13) #individuals in age class 2 in time t
age3<-c(4, 7) #offspring in time t+1 produced by age class 2
p2<-age3/age2 #yearly fertility rate
P2<-prod(p2)^(1/2) #geometric mean of fertility, F2
P2
