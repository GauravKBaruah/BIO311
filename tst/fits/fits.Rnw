\documentclass{article}
\usepackage[utf8]{inputenc}
\usepackage{amsmath}
\usepackage{graphicx}
%\usepackage{bbold}
\usepackage{tikz}
%\usepackage{silence}
%\WarningFilter{mdframed}{You got a bad break}
\usepackage[colorinlistoftodos]{todonotes}
\usepackage{listings}
\usepackage{color}
\colorlet{exampcol}{blue!10}
\usepackage{multicol}
\usepackage[answerdelayed]{exercise}
\usepackage{booktabs}

\title{BIO311: Population Ecology\\ \textit{Prac 8: Life tables \& Population Matrices}}

\author{Koen van Benthem \& Tina Cornioley\\\\
\tt{koen.vanbenthem@ieu.uzh.ch}\\ \tt{tina.cornioley@ieu.uzh.ch}}

\date{Spring 2014}
\setcounter{tocdepth}{1} % Determines the depth of the table of contents;; 0:chapters, 1: chapters and sections, 2: chapters,sections and subsections

%\renewcommand{\theExercise}{\thechapter.\arabic{Exercise}}%

\begin{document}
<<setup, cache=FALSE, include=FALSE>>=
opts_chunk$set(dev="tikz",tidy=F,dev.args=list(pointsize=7.5))
options(width=60)
@

<<setparameters,echo=FALSE,include=FALSE>>=

@
\maketitle
\tableofcontents
\vspace{3cm}
\newpage
This is 1 out of 3 methods (so far) for extracting transition rates from the raw data.
\section{Preparing the data}
<<k1>>=
rot<-read.csv("rdata.csv",header=T,sep=",")
@
Since we aim for transitions, rearrange the data, for the transition from timestep 1 to 2:
<<k2>>=
rot1<-subset(rot,Day==1)
rot2<-subset(rot,Day==2)
rot12<-merge(rot1,rot2,by=c("Population","Copper","Replicate"))
@
And for the transition from 2 to 3:
<<k3>>=
rot3<-subset(rot,Day==3)
rot23<-merge(rot2,rot3,by=c("Population","Copper","Replicate"))
@
And we create one super object that contains all transitions:
<<k4>>=
rot123<-rbind(rot12,rot23)
@
\section{Finding transition rates based on linear fits (\texttt{lm})}
\textit{First we focus only on the transition from timestep 2 to 3}
<<k5,results='asis',out.width='0.65\\textwidth',fig.align='center'>>=
library('xtable')
store<-data.frame(Population=c(NA),Copper=c(NA),R=c(NA),SA=c(NA),SJ=c(NA))
for(i in levels(rot123$Population)){
  temp<-subset(rot23,Population==i)
  for(j in levels(rot123$Copper)){
        # Selecting the correct part of the dataset:
    temp2<-subset(temp,Copper==j)
    
    cat("\\subsection{",i,j,"}\n")
    cat("\\subsubsection{Determining reproduction}\n\n")
    cat("First we fit a value for the reproductive rate using \\texttt{lm} where we force the line to go through $0$. \n\n")
    
    par(mar=c(6,6,2,2))
    plot(temp2$Alive_Adult.x,temp2$Alive_Juv.y,xlab="Number of adults at time $t$",ylab="Number of juveniles at time $t+1$", main=paste("Reproductive rate",i,j),xlim=c(0,max(temp2$Alive_Adult.x)),ylim=c(0,max(temp2$Alive_Juv.y)))
    reg1<-lm(temp2$Alive_Juv.y~temp2$Alive_Adult.x+0)
    abline(reg1)
    cat("\n From this regression we found that R=",reg1$coef[[1]],"\n\n")
    
    cat("\\subsubsection{Determining survival}\n\n")
    cat("Now we perform a second regression. We fit a plane in which the number of adults next year depends on both the number of juveniles this year and the number of adults this year")
    reg2<-lm(temp2$Alive_Adult.y~temp2$Alive_Adult.x+temp2$Alive_Juv.x+0)
    cat("\\\\From this we find:\\\\ \n$S_A=$",reg2$coef[[1]],"\n$S_J=$",reg2$coef[[2]],"\n")
    
    storet<-data.frame(Population=c(i),Copper=c(j),R=c(reg1$coef[[1]]),SA=c(reg2$coef[[1]]),SJ=c(reg2$coef[[2]]))
    store<-rbind(store,storet)
  }
  
}
cat("\\subsection{Summary of the data for the 2--3 transition}")
store<-store[-1,]
print(xtable(store, digits=2), 
      size="footnotesize", #Change size; useful for bigger tables
      include.rownames=FALSE, #Don't print rownames
      include.colnames=FALSE, #We create them ourselves
      floating=FALSE,
      hline.after=NULL, #We don't need hline; we use booktabs
      add.to.row = list(pos = list(-1, 
                                   nrow(store)),
                        command = c(paste("\\toprule \n",
                                          "$Population$ & $Copper$ & $R$ & $S_A$ & $S_J$ \\\\\n", 
                                          "\\midrule \n"),
                                    "\\bottomrule \n")
                        ))

cat("\\subsection{Summary of the data for both transitions}")
store<-data.frame(Population=c(NA),Copper=c(NA),R=c(NA),SA=c(NA),SJ=c(NA))
for(i in levels(rot123$Population)){
  temp<-subset(rot123,Population==i)
  for(j in levels(rot123$Copper)){
        # Selecting the correct part of the dataset:
    temp2<-subset(temp,Copper==j)
    reg1<-lm(temp2$Alive_Juv.y~temp2$Alive_Adult.x+0)
    reg2<-lm(temp2$Alive_Adult.y~temp2$Alive_Adult.x+temp2$Alive_Juv.x+0)
    
    storet<-data.frame(Population=c(i),Copper=c(j),R=c(reg1$coef[[1]]),SA=c(reg2$coef[[1]]),SJ=c(reg2$coef[[2]]))
    store<-rbind(store,storet)
  }
  
}
store<-store[-1,]
print(xtable(store, digits=2), 
      size="footnotesize", #Change size; useful for bigger tables
      include.rownames=FALSE, #Don't print rownames
      include.colnames=FALSE, #We create them ourselves
      floating=FALSE,
      hline.after=NULL, #We don't need hline; we use booktabs
      add.to.row = list(pos = list(-1, 
                                   nrow(store)),
                        command = c(paste("\\toprule \n",
                                          "$Population$ & $Copper$ & $R$ & $S_A$ & $S_J$ \\\\\n", 
                                          "\\midrule \n"),
                                    "\\bottomrule \n")
                        ))
@
\section{Taking into account that $0<S_J<1$ and $0<S_A<1$}
We now use \texttt{nls()} to ensure that both $S_J$ and $S_A$ stay between 0 and 1. (not sure if this is the best solution, but at least it is a solution.) 
<<k6,results='asis',out.width='0.65\\textwidth',fig.align='center'>>=
library('xtable')
store<-data.frame(Population=c(NA),Copper=c(NA),R=c(NA),SA=c(NA),SJ=c(NA))
for(i in levels(rot123$Population)){
  temp<-subset(rot123,Population==i)
  for(j in levels(rot123$Copper)){
        # Selecting the correct part of the dataset:
    temp2<-subset(temp,Copper==j)
    reg1<-lm(temp2$Alive_Juv.y~temp2$Alive_Adult.x+0)
    y<-temp2$Alive_Adult.y
    x1<-temp2$Alive_Adult.x
    x2<-temp2$Alive_Juv.x
    nlsfit<-nls(y~sa*x1+sj*x2,start=c(sa=0.5,sj=0.5),upper=c(sa=1,sj=1),lower=c(sa=0,sj=0),algorithm="port")
    
    storet<-data.frame(Population=c(i),Copper=c(j),R=c(reg1$coef[[1]]),SA=c(coef(nlsfit)[[1]]),SJ=c(coef(nlsfit)[[2]]))
    store<-rbind(store,storet)
  }
  
}
store<-store[-1,]
print(xtable(store, digits=2), 
      size="footnotesize", #Change size; useful for bigger tables
      include.rownames=FALSE, #Don't print rownames
      include.colnames=FALSE, #We create them ourselves
      floating=FALSE,
      hline.after=NULL, #We don't need hline; we use booktabs
      add.to.row = list(pos = list(-1, 
                                   nrow(store)),
                        command = c(paste("\\toprule \n",
                                          "$Population$ & $Copper$ & $R$ & $S_A$ & $S_J$ \\\\\n", 
                                          "\\midrule \n"),
                                    "\\bottomrule \n")
                        ))
store$lambda<-NA
library('popbio')
for(i in 1:length(store$SJ)){
A<-matrix(c(0,store$SJ[i],store$R[i],store$SA[i]),nrow=2)

  store$lambda[i]<-lambda(A)
}
print(xtable(store, digits=4), 
      size="footnotesize", #Change size; useful for bigger tables
      include.rownames=FALSE, #Don't print rownames
      include.colnames=FALSE, #We create them ourselves
      floating=FALSE,
      hline.after=NULL, #We don't need hline; we use booktabs
      add.to.row = list(pos = list(-1, 
                                   nrow(store)),
                        command = c(paste("\\toprule \n",
                                          "$Population$ & $Copper$ & $R$ & $S_A$ & $S_J$ & $\\lambda$\\\\\n", 
                                          "\\midrule \n"),
                                    "\\bottomrule \n")
                        ))
@
\section{What the students found}
<<students,echo=FALSE,results='asis'>>=
rot<-read.csv("rdata.csv", sep=",", header=T)
rot<-rot[,c(-3,-11)]
rot2<-subset(rot,Day==2)
rot3<-subset(rot,Day==3)
refr<-read.csv("BIO311_with_rates.csv",sep=",",header=T)
refr<-refr[,c(-1,-3,-6,-7,-8,-9,-10)]
rot23<-merge(rot2,rot3,by=c("Population","Copper","Replicate"))
rot23<-merge(rot23,refr,by=c("Population","Copper","Replicate"))

rot23$NPj<-NA
rot23$NPa<-NA
rot23$NF<-NA

### DATA BIJMAKEN VOOR 1 casus
rot23$Alive_Adult.x[29]<-1

for(i in 1:length(rot23$Population)){
  j1<-rot23$Alive_Juv.x[i]
	j2<-rot23$Alive_Juv.y[i]
	a1<-rot23$Alive_Adult.x[i]
	a2<-rot23$Alive_Adult.y[i]
	da<-rot23$Dead_Adult.y[i]
	dj<-rot23$Dead_Juv.y[i]
	
	if(j1+a1>=da+a2){
    if((a1-da)>=a2){
      rot23$NPa[i]<-a2/a1
      rot23$NPj[i]<-0
      rot23$NF[i]<-j2/a1
    }else{
      rot23$NPa[i]<-(a1-da)/a1
      rot23$NPj[i]<-(a2-a1+da)/j1
      rot23$NF[i]<-j2/a1  
    }
		
	}else{
	  rot23$NPa[i]<-(a1-da)/a1
	  rot23$NPj[i]<-(j1-dj)/j1
	  rot23$NF[i]<-(j2+a2+da-j1-a1)/a1  
    
	}
	
	if(j1==0){
	  rot23$NPj[i]<-NA
	}
	
}

temp<-aggregate(rot23$F,by=list(rot23$Population,rot23$Copper),function(x) mean(x,na.rm=TRUE))
temp<-temp[order(temp$Group.1,temp$Group.2),]
colnames(temp)[3]<-"R"
temp2<-aggregate(rot23$Pa,by=list(rot23$Population,rot23$Copper),function(x) mean(x,na.rm=TRUE))
colnames(temp2)[3]<-"Sa"
temp3<-aggregate(rot23$Pj,by=list(rot23$Population,rot23$Copper),function(x) mean(x,na.rm=TRUE))
colnames(temp3)[3]<-"Sj"
roti<-merge(temp,temp2,by=c(1,2))
roti<-merge(roti,temp3,by=c(1,2))
roti$lambda<-NA
library('popbio')
for(i in 1:length(roti$Sj)){
A<-matrix(c(0,roti$Sj[i],roti$R[i],roti$Sa[i]),nrow=2)

  roti$lambda[i]<-lambda(A)
}
print(xtable(roti, digits=4), 
      size="footnotesize", #Change size; useful for bigger tables
      include.rownames=FALSE, #Don't print rownames
      include.colnames=FALSE, #We create them ourselves
      floating=FALSE,
      hline.after=NULL, #We don't need hline; we use booktabs
      add.to.row = list(pos = list(-1, 
                                   nrow(store)),
                        command = c(paste("\\toprule \n",
                                          "$Population$ & $Copper$ & $R$ & $S_A$ & $S_J$ & $\\lambda$\\\\\n", 
                                          "\\midrule \n"),
                                    "\\bottomrule \n")
                        ))
@
\end{document}