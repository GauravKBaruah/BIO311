AavL<-matrix(c(0,Sjav,Rav,Saav),nrow=2)
Midw<-0.5*(Aav+AavL)
EffL<-sensitivity(Midw)*(AavL-Aav)
###### INTERACTIONS.... YAY
# Poll/Low
rotii<-subset(roti,(roti$Group.1=="Pollution" & roti$Group.2=="low"))
Rav<-mean(rotii$R)
Sjav<-mean(rotii$Sj)
Saav<-mean(rotii$Sa)
AavPL<-matrix(c(0,Sjav,Rav,Saav),nrow=2)
Midw<-0.5*(Aav+AavPL)
EffPL<-sensitivity(Midw)*(AavPL-Aav)-effL-effP
EffPL<-sensitivity(Midw)*(AavPL-Aav)-EffL-EffP
EffPL
get_matrix<-function(roti,pop,cop){
if(!pop %in% c(levels(roti$Population),"mean")){
warning("Something went wrong, give the instructors
a cookie and they may help you out:
\n------------------------\n ",pop,
" is not a valid entry\n------------------------\n")
return()
}
if(!cop %in% c(levels(roti$Copper),"mean")){
warning("Something went wrong, give the instructors
a cookie and they may help you out:
\n------------------------\n ",cop,"
is not a valid entry\n------------------------\n")
return()
}
if(pop=="mean" & cop=="mean"){
i<-1:length(roti$Copper)
}else if(pop=="mean"){
i<-which(roti$Copper==cop)
}else if(cop=="mean"){
i<-which(roti$Population==pop)
}else{
i<-which(roti$Population==pop & roti$Copper==cop)
}
A<-matrix(c(0, mean(roti$Pj[i]),
mean(roti$F[i]), mean(roti$Pa[i])), nrow=2, ncol=2)
return(A)
}
rot<-read.csv("BIO311_with_rates.csv", sep=",")
str(rot)
#Find the avg rate per treatment
Pj<-aggregate(rot$Pj, list(rot$Population, rot$Copper, rot$Species), na.rm=TRUE, FUN="mean")
Pj
Pa<-aggregate(rot$Pa, list(rot$Population, rot$Copper, rot$Species), na.rm=TRUE, FUN="mean")
Pa
F<-aggregate(rot$F, list(rot$Population, rot$Copper, rot$Species), na.rm=TRUE, FUN="mean")
F
Surv<-merge(Pj, Pa,  by=c(1,2,3))
Surv
# Merge it into one dataset
Roti<-merge(Surv, F, by=c(1,2,3))
colnames(Roti)<- c("Population", "Copper", "Species", "Pj", "Pa", "F")
Roti
#Finding the lambda for each matrix (optional)
Roti$lambda<-NA
library('popbio')
for (i in 1:length(Roti$Pj)){
M<-matrix(c(0, Roti$Pj[i], Roti$F[i], Roti$Pa[i]), nrow=2, ncol=2)
Roti$lambda[i]<-lambda(M)
}
Roti
#----------- code for function to extract matrices from the dataset-----------#
get_matrix<-function(roti,pop,cop){
if(!pop %in% c(levels(roti$Population),"mean")){
warning("Something went wrong, give the instructors a cookie and they may help you out:\n------------------------\n ",pop," is not a valid entry\n------------------------\n")
return()
}
if(!cop %in% c(levels(roti$Copper),"mean")){
warning("Something went wrong, give the instructors a cookie and they may help you out:\n------------------------\n ",cop," is not a valid entry\n------------------------\n")
return()
}
if(pop=="mean" & cop=="mean"){
i<-1:length(roti$Copper)
}else if(pop=="mean"){
i<-which(roti$Copper==cop)
}else if(cop=="mean"){
i<-which(roti$Population==pop)
}else{
i<-which(roti$Population==pop & roti$Copper==cop)
}
A<-matrix(c(0, mean(roti$Pj[i]), mean(roti$F[i]), mean(roti$Pa[i])), nrow=2, ncol=2)
return(A)
}
#--------------------------end of the function-----------------#
#Get the matrices we are interested in (for Species BU)
Rotisub <- subset(Roti, Roti$Species=="BU")
Rotisub
#Here let us do the LTRE
#two factors: population (1) and Copper (2)
#The average matrix:
M<-get_matrix(Rotisub, "mean", "mean")
#First the effect of population (1)-> alpha
pol<-get_matrix(Rotisub, "Pollution", "mean")
#Population level 1->Pollution
#Population level 2->Recovery
#Pollution
#The mid-way matrix
A<-((M+pol)/2)
#The loop
a<-0.01
Sen<-matrix(NA,2,2)
PoPL<-matrix(NA,2,2)
for (i in 1:2){
for (j in 1:2){
polp<-pol
polp[i,j]<-pol[i,j]-M[i,j]
Ap<-A
Ap[i,j]<-A[i,j]+a
Sen[i,j]<-(lambda(Ap)-lambda(A))/a
PoPL[i,j]<-polp[i,j]*Sen[i,j]
}
}
PoPL
#Recovery
rec<-get_matrix(Rotisub, "Recovery", "mean")
#The mid-way matrix
B<-((M+rec)/2)
#The loop
a<-0.01
Sen<-matrix(NA,2,2)
ReC<-matrix(NA,2,2)
for (i in 1:2){
for (j in 1:2){
recp<-rec
recp[i,j]<-rec[i,j]-M[i,j]
Bp<-B
Bp[i,j]<-B[i,j]+a
Sen[i,j]<-(lambda(Bp)-lambda(B))/a
ReC[i,j]<-recp[i,j]*Sen[i,j]
}
}
ReC
#Second the effect of Copper (2)-> beta
hig<-get_matrix(Rotisub, "mean", "high")
med<-get_matrix(Rotisub, "mean", "medium")
low<-get_matrix(Rotisub, "mean", "low")
#Copper level 1->High
#Copper leve 2->Medium
#Copper leve 3->Low
#High
#The mid-way matrix
#for beta:
C<-((M+hig)/2)
#The loop
a<-0.01
Sen<-matrix(NA,2,2)
HiG<-matrix(NA,2,2)
for (i in 1:2){
for (j in 1:2){
higp<-hig
higp[i,j]<-hig[i,j]-M[i,j]
Cp<-C
Cp[i,j]<-C[i,j]+a
Sen[i,j]<-(lambda(Cp)-lambda(C))/a
HiG[i,j]<-higp[i,j]*Sen[i,j]
}
}
HiG
#Medium
#The mid-way matrix
#for beta:
D<-((M+med)/2)
#The loop
a<-0.01
Sen<-matrix(NA,2,2)
MeD<-matrix(NA,2,2)
for (i in 1:2){
for (j in 1:2){
medp<-med
medp[i,j]<-med[i,j]-M[i,j]
Dp<-D
Dp[i,j]<-D[i,j]+a
Sen[i,j]<-(lambda(Dp)-lambda(D))/a
MeD[i,j]<-medp[i,j]*Sen[i,j]
}
}
MeD
#Low
#The mid-way matrix
#for beta:
E<-((M+low)/2)
#The loop
a<-0.01
Sen<-matrix(NA,2,2)
LoW<-matrix(NA,2,2)
for (i in 1:2){
for (j in 1:2){
lowp<-low
lowp[i,j]<-low[i,j]-M[i,j]
Ep<-E
Ep[i,j]<-E[i,j]+a
Sen[i,j]<-(lambda(Ep)-lambda(E))/a
LoW[i,j]<-lowp[i,j]*Sen[i,j]
}
}
LoW
#Interactions
#Here let us extract the 6 matrices we need:
Aph<-get_matrix(Rotisub,"Pollution", "high")
Apm<-get_matrix(Rotisub,"Pollution", "medium")
Apl<-get_matrix(Rotisub,"Pollution", "low")
Arh<-get_matrix(Rotisub,"Recovery", "high")
Arm<-get_matrix(Rotisub,"Recovery", "medium")
Arl<-get_matrix(Rotisub,"Recovery", "low")
#The mid-way matrix
#for alpha:beta:
F<-((M+Aph)/2)
#The loop
a<-0.01
Sen<-matrix(NA,2,2)
ApH<-matrix(NA,2,2)
for (i in 1:2){
for (j in 1:2){
Aphp<-Aph
Aphp[i,j]<-Aph[i,j]-M[i,j]
Fp<-F
Fp[i,j]<-F[i,j]+a
Sen[i,j]<-(lambda(Fp)-lambda(F))/a
ApH[i,j]<-(Aphp[i,j]*Sen[i,j])
}
}
ApH<-ApH-PoPL-HiG
ApH
#The mid-way matrix
#for alpha:beta:
G<-((M+Apm)/2)
#The loop
a<-0.01
Sen<-matrix(NA,2,2)
ApM<-matrix(NA,2,2)
for (i in 1:2){
for (j in 1:2){
Apmp<-Apm
Apmp[i,j]<-Apm[i,j]-M[i,j]
Gp<-G
Gp[i,j]<-G[i,j]+a
Sen[i,j]<-(lambda(Gp)-lambda(G))/a
ApM[i,j]<-(Apmp[i,j]*Sen[i,j])
}
}
ApM<-ApM-PoPL-MeD
ApM
#The mid-way matrix
#for alpha:beta:
H<-((M+Apl)/2)
#The loop
a<-0.01
Sen<-matrix(NA,2,2)
ApL<-matrix(NA,2,2)
for (i in 1:2){
for (j in 1:2){
Aplp<-Apl
Aplp[i,j]<-Apl[i,j]-M[i,j]
Hp<-H
Hp[i,j]<-H[i,j]+a
Sen[i,j]<-(lambda(Hp)-lambda(H))/a
ApL[i,j]<-(Aplp[i,j]*Sen[i,j])
}
}
ApL<-ApL-PoPL-LoW
ApL
#The mid-way matrix
#for alpha:beta:
I<-((M+Arh)/2)
#The loop
a<-0.01
Sen<-matrix(NA,2,2)
ArH<-matrix(NA,2,2)
for (i in 1:2){
for (j in 1:2){
Arhp<-Arh
Arhp[i,j]<-Arh[i,j]-M[i,j]
Ip<-I
Ip[i,j]<-I[i,j]+a
Sen[i,j]<-(lambda(Ip)-lambda(I))/a
ArH[i,j]<-(Arhp[i,j]*Sen[i,j])-ReC[i,j]-HiG[i,j]
}
}
ArH<-ArH-ReC-HiG
ArH
#The mid-way matrix
#for alpha:beta:
J<-((M+Arm)/2)
#The loop
a<-0.01
Sen<-matrix(NA,2,2)
ArM<-matrix(NA,2,2)
for (i in 1:2){
for (j in 1:2){
Armp<-Arm
Armp[i,j]<-Arm[i,j]-M[i,j]
Jp<-J
Jp[i,j]<-J[i,j]+a
Sen[i,j]<-(lambda(Jp)-lambda(J))/a
ArM[i,j]<-(Armp[i,j]*Sen[i,j])
}
}
ArM<-ArM-ReC-MeD
ArM
#The mid-way matrix
#for alpha:beta:
K<-((M+Arl)/2)
#The loop
a<-0.01
Sen<-matrix(NA,2,2)
ArL<-matrix(NA,2,2)
for (i in 1:2){
for (j in 1:2){
Arlp<-Arl
Arlp[i,j]<-Arl[i,j]-M[i,j]
Kp<-K
Kp[i,j]<-K[i,j]+a
Sen[i,j]<-(lambda(Kp)-lambda(K))/a
ArL[i,j]<-Arlp[i,j]*Sen[i,j]
}
}
ArL<-ArL-ReC-LoW
ArL
#graphs
#Copper
Copper <- cbind(as.vector(HiG)[2:4], as.vector(MeD)[2:4], as.vector(LoW)[2:4])
colnames(Copper) <- c("High", "Medium", "Low")
rownames(Copper) <- c("Pj", "F", "Pa")
Copper
Coppert<-t(Copper)
barplot(Coppert,xaxt='n', xlab="", ylab="Parameters contribution", ylim=c(-0.16, 0.16), xlim=c(0,14), col=c("brown","orange", "yellow"), beside=TRUE)
segments(-1,0, 13,0)
par(mar=c(5, 5, 7, 3), xpd=TRUE)
legend("topleft", inset=c(0,-0.25),  title="Copper level",
c("High", "Medium", "Low"), fill=c("brown","orange", "yellow"), horiz=TRUE)
axis(side=1, at=c(3,7,11), labels=c( "Pj", "F", "Pa"), line=1, tick=FALSE)
#Layer
Layer <- cbind(as.vector(PoPL)[2:4], as.vector(ReC)[2:4])
colnames(Layer) <- c("Pollution", "Recovery")
rownames(Layer) <- c("Pj", "F", "Pa")
Layer
Layert<-t(Layer)
barplot(Layert,xaxt='n', xlab="", ylab="Parameters contribution", ylim=c(-0.16, 0.16), xlim=c(0,14), col=c("blue","lightblue"), beside=TRUE)
segments(-1,0, 10,0)
par(mar=c(5, 5, 7, 3), xpd=TRUE)
legend("topleft", inset=c(0,-0.25),  title="Layer",
c("Pollution", "Recovery"), fill=c("blue","lightblue"), horiz=TRUE)
axis(side=1, at=c(2,5,8), labels=c( "Pj", "F", "Pa"), line=1, tick=FALSE)
#Interaction
#Layer
Interactions <- cbind(as.vector(ApH)[2:4], as.vector(ApM)[2:4], as.vector(ApL)[2:4], as.vector(ArH)[2:4], as.vector(ArM)[2:4], as.vector(ArL)[2:4])
colnames(Interactions) <- c("PolH", "PolM", "PolL", "RecH", "RecM", "RecL")
rownames(Interactions) <- c("Pj", "F", "Pa")
Interactions
Interactionst<-t(Interactions)
rainbow(6,start = 0, end = 0.5, alpha = 0.7)
library("RColorBrewer")
barplot(Interactionst, xaxt='n', xlab="", ylab="Parameters contribution", ylim=c(-0.16, 0.16), xlim=c(0,20), col=brewer.pal(6, "Set3") , beside=TRUE)
segments(-1,0, 20,0)
par(mar=c(5, 5, 7, 3), xpd=TRUE)
legend("topleft", inset=c(0,-0.6),  title="Interactions",
c("Pol, hig", "Pol, med", "Pol, low", "Rec, hig", "Rec, med", "Rec, low"), fill=brewer.pal(6, "Set3"), bty="n", ncol=2)
axis(side=1, at=c(5,12,18), labels=c( "Pj", "F", "Pa"), line=1, tick=FALSE)
EffRH
rot23<-read.csv("BIO311_with_rates.csv",sep=",",header=T)
rot23<-rot23[,c(-1,-3,-6,-7,-8,-9,-10)]
temp<-aggregate(rot23$F,by=list(rot23$Population,rot23$Copper),function(x) mean(x,na.rm=TRUE))
temp<-temp[order(temp$Group.1,temp$Group.2),]
colnames(temp)[3]<-"R"
temp2<-aggregate(rot23$Pa,by=list(rot23$Population,rot23$Copper),function(x) mean(x,na.rm=TRUE))
colnames(temp2)[3]<-"Sa"
temp3<-aggregate(rot23$Pj,by=list(rot23$Population,rot23$Copper),function(x) mean(x,na.rm=TRUE))
colnames(temp3)[3]<-"Sj"
roti<-merge(temp,temp2,by=c(1,2))
roti<-merge(roti,temp3,by=c(1,2))
roti$lambda<-NA
for(i in 1:length(roti$Sj)){
A<-matrix(c(0,roti$Sj[i],roti$R[i],roti$Sa[i]),nrow=2)
roti$lambda[i]<-lambda(A)
}
rotiR<-subset(roti,roti$Group.1=="Recovery")
rotiP<-subset(roti,roti$Group.1=="Pollution")
###### ALPHA : LAYER EFFECT #######
Rav<-mean(c(mean(rotiR$R),mean(rotiP$R)))
Sjav<-mean(c(mean(rotiR$Sj),mean(rotiP$Sj)))
Saav<-mean(c(mean(rotiR$Sa),mean(rotiP$Sa)))
Aav<-matrix(c(0,Sjav,Rav,Saav),nrow=2)
### 1) Pollution
Rav<-mean(rotiP$R)
Sjav<-mean(rotiP$Sj)
Saav<-mean(rotiP$Sa)
AavP<-matrix(c(0,Sjav,Rav,Saav),nrow=2)
Midw<-0.5*(Aav+AavP)
EffP<-sensitivity(Midw)*(AavP-Aav)
### 2) Recovery
Rav<-mean(rotiR$R)
Sjav<-mean(rotiR$Sj)
Saav<-mean(rotiR$Sa)
AavR<-matrix(c(0,Sjav,Rav,Saav),nrow=2)
Midw<-0.5*(Aav+AavR)
EffR<-sensitivity(Midw)*(AavR-Aav)
##### BETA: COPPER EFFECT #########
roti<-rbind(rotiR,rotiP)
rotiL<-subset(roti,roti$Group.2=="low")
rotiH<-subset(roti,roti$Group.2=="high")
rotiM<-subset(roti,roti$Group.2=="medium")
## High
Rav<-mean(rotiH$R)
Sjav<-mean(rotiH$Sj)
Saav<-mean(rotiH$Sa)
AavH<-matrix(c(0,Sjav,Rav,Saav),nrow=2)
Midw<-0.5*(Aav+AavH)
EffH<-sensitivity(Midw)*(AavH-Aav)
## Medium
Rav<-mean(rotiM$R)
Sjav<-mean(rotiM$Sj)
Saav<-mean(rotiM$Sa)
AavM<-matrix(c(0,Sjav,Rav,Saav),nrow=2)
Midw<-0.5*(Aav+AavM)
EffM<-sensitivity(Midw)*(AavM-Aav)
## Low
Rav<-mean(rotiL$R)
Sjav<-mean(rotiL$Sj)
Saav<-mean(rotiL$Sa)
AavL<-matrix(c(0,Sjav,Rav,Saav),nrow=2)
Midw<-0.5*(Aav+AavL)
EffL<-sensitivity(Midw)*(AavL-Aav)
###### INTERACTIONS.... YAY
# Poll/Low
rotii<-subset(roti,(roti$Group.1=="Pollution" & roti$Group.2=="low"))
Rav<-mean(rotii$R)
Sjav<-mean(rotii$Sj)
Saav<-mean(rotii$Sa)
AavPL<-matrix(c(0,Sjav,Rav,Saav),nrow=2)
Midw<-0.5*(Aav+AavPL)
EffPL<-sensitivity(Midw)*(AavPL-Aav)-EffL-EffP
EffPL
# Poll/Med
rotii<-subset(roti,(roti$Group.1=="Pollution" & roti$Group.2=="medium"))
Rav<-mean(rotii$R)
Sjav<-mean(rotii$Sj)
Saav<-mean(rotii$Sa)
AavPM<-matrix(c(0,Sjav,Rav,Saav),nrow=2)
Midw<-0.5*(Aav+AavPM)
EffPM<-sensitivity(Midw)*(AavPM-Aav)-EffM-EffP
EffPM
# Poll/High
rotii<-subset(roti,(roti$Group.1=="Pollution" & roti$Group.2=="high"))
Rav<-mean(rotii$R)
Sjav<-mean(rotii$Sj)
Saav<-mean(rotii$Sa)
AavPH<-matrix(c(0,Sjav,Rav,Saav),nrow=2)
Midw<-0.5*(Aav+AavPH)
EffPH<-sensitivity(Midw)*(AavPH-Aav)-EffH-EffP
EffPH
# R/L
rotii<-subset(roti,(roti$Group.1=="Recovery" & roti$Group.2=="low"))
Rav<-mean(rotii$R)
Sjav<-mean(rotii$Sj)
Saav<-mean(rotii$Sa)
AavRL<-matrix(c(0,Sjav,Rav,Saav),nrow=2)
Midw<-0.5*(Aav+AavRL)
EffRL<-sensitivity(Midw)*(AavRL-Aav)-EffL-EffR
EffRL
# R/M
rotii<-subset(roti,(roti$Group.1=="Recovery" & roti$Group.2=="medium"))
Rav<-mean(rotii$R)
Sjav<-mean(rotii$Sj)
Saav<-mean(rotii$Sa)
AavRM<-matrix(c(0,Sjav,Rav,Saav),nrow=2)
Midw<-0.5*(Aav+AavRM)
EffRM<-sensitivity(Midw)*(AavRM-Aav)-EffM-EffR
EffRM
# R/H
rotii<-subset(roti,(roti$Group.1=="Recovery" & roti$Group.2=="high"))
Rav<-mean(rotii$R)
Sjav<-mean(rotii$Sj)
Saav<-mean(rotii$Sa)
AavRH<-matrix(c(0,Sjav,Rav,Saav),nrow=2)
Midw<-0.5*(Aav+AavRH)
EffRH<-sensitivity(Midw)*(AavRH-Aav)-EffH-EffR
EffRH
EffRH
ArH
I<-((M+Arh)/2)
I
rotii<-subset(roti,(roti$Group.1=="Recovery" & roti$Group.2=="high"))
Rav<-mean(rotii$R)
Sjav<-mean(rotii$Sj)
Saav<-mean(rotii$Sa)
AavRH<-matrix(c(0,Sjav,Rav,Saav),nrow=2)
Midw<-0.5*(Aav+AavRH)
Midw
ReC
EffR
HiG
EffH
Arh
AavRH
Sen<-matrix(NA,2,2)
ArH<-matrix(NA,2,2)
for (i in 1:2){
for (j in 1:2){
Arhp<-Arh
Arhp[i,j]<-Arh[i,j]-M[i,j]
Ip<-I
Ip[i,j]<-I[i,j]+a
Sen[i,j]<-(lambda(Ip)-lambda(I))/a
ArH[i,j]<-(Arhp[i,j]*Sen[i,j])-ReC[i,j]-HiG[i,j]
}
}
Sen
sensitivity(Midw)
