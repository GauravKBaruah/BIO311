j1<-rot23$Alive_Juv.x[i]
j2<-rot23$Alive_Juv.y[i]
a1<-rot23$Alive_Adult.x[i]
a2<-rot23$Alive_Adult.y[i]
da<-rot23$Dead_Adult.y[i]
dj<-rot23$Dead_Juv.y[i]
if(j1+a1>=da+a2){
if((a1-da)>=a2){
rot23$NPa[i]<-da/a1
rot23$NPj[i]<-0
rot23$NF[i]<-j2/a1
}else{
rot23$NPa[i]<-(a1-da)/a1
rot23$NPj[i]<-(a2-a1+da)/j1
rot23$NF[i]<-j2/a1
}
}
}
rot23[4,]
rot23
rot23[3,]
19/8
rot<-read.csv("rdata.csv", sep=",", header=T)
rot<-rot[,c(-3,-11)]
rot2<-subset(rot,Day==2)
rot3<-subset(rot,Day==3)
refr<-read.csv("BIO311_with_rates.csv",sep=",",header=T)
refr<-refr[,c(-1,-3,-6,-7,-8,-9,-10)]
rot23<-merge(rot2,rot3,by=c("Population","Copper","Replicate"))
rot23<-merge(rot23,refr,by=c("Population","Copper","Replicate"))
rot23$NPj<-NA
rot23$NPa<-NA
rot23$NF<-NA
for(i in 1:length(rot23$Population)){
j1<-rot23$Alive_Juv.x[i]
j2<-rot23$Alive_Juv.y[i]
a1<-rot23$Alive_Adult.x[i]
a2<-rot23$Alive_Adult.y[i]
da<-rot23$Dead_Adult.y[i]
dj<-rot23$Dead_Juv.y[i]
if(j1+a1>=da+a2){
if((a1-da)>=a2){
rot23$NPa[i]<-da/a1
rot23$NPj[i]<-0
rot23$NF[i]<-j2/a1
}else{
rot23$NPa[i]<-(a1-da)/a1
rot23$NPj[i]<-(a2-a1+da)/j1
rot23$NF[i]<-j2/a1
}
}else{
rot23$NPa[i]<-1
rot23$NPj[i]<-1
rot23$NF[i]<-(a2+da-j1-a1)/a1
}
}
rot23
rot<-read.csv("rdata.csv", sep=",", header=T)
rot<-rot[,c(-3,-11)]
rot2<-subset(rot,Day==2)
rot3<-subset(rot,Day==3)
refr<-read.csv("BIO311_with_rates.csv",sep=",",header=T)
refr<-refr[,c(-1,-3,-6,-7,-8,-9,-10)]
rot23<-merge(rot2,rot3,by=c("Population","Copper","Replicate"))
rot23<-merge(rot23,refr,by=c("Population","Copper","Replicate"))
rot23$NPj<-NA
rot23$NPa<-NA
rot23$NF<-NA
for(i in 1:length(rot23$Population)){
j1<-rot23$Alive_Juv.x[i]
j2<-rot23$Alive_Juv.y[i]
a1<-rot23$Alive_Adult.x[i]
a2<-rot23$Alive_Adult.y[i]
da<-rot23$Dead_Adult.y[i]
dj<-rot23$Dead_Juv.y[i]
if(j1+a1>=da+a2){
if((a1-da)>=a2){
rot23$NPa[i]<-da/a1
rot23$NPj[i]<-0
rot23$NF[i]<-j2/a1
}else{
rot23$NPa[i]<-(a1-da)/a1
rot23$NPj[i]<-(a2-a1+da)/j1
rot23$NF[i]<-j2/a1
}
}else{
rot23$NPa[i]<-1
rot23$NPj[i]<-1
rot23$NF[i]<-(j2+a2+da-j1-a1)/a1
}
}
rot23
rot23[4,]
rot<-read.csv("rdata.csv", sep=",", header=T)
rot<-rot[,c(-3,-11)]
rot2<-subset(rot,Day==2)
rot3<-subset(rot,Day==3)
refr<-read.csv("BIO311_with_rates.csv",sep=",",header=T)
refr<-refr[,c(-1,-3,-6,-7,-8,-9,-10)]
rot23<-merge(rot2,rot3,by=c("Population","Copper","Replicate"))
rot23<-merge(rot23,refr,by=c("Population","Copper","Replicate"))
rot23$NPj<-NA
rot23$NPa<-NA
rot23$NF<-NA
for(i in 1:length(rot23$Population)){
j1<-rot23$Alive_Juv.x[i]
j2<-rot23$Alive_Juv.y[i]
a1<-rot23$Alive_Adult.x[i]
a2<-rot23$Alive_Adult.y[i]
da<-rot23$Dead_Adult.y[i]
dj<-rot23$Dead_Juv.y[i]
if(j1+a1>=da+a2){
if((a1-da)>=a2){
rot23$NPa[i]<-da/a1
rot23$NPj[i]<-0
rot23$NF[i]<-j2/a1
}else{
rot23$NPa[i]<-(a1-da)/a1
rot23$NPj[i]<-(a2-a1+da)/j1
rot23$NF[i]<-j2/a1
}
}else{
rot23$NPa[i]<-(a1-da)/a1
rot23$NPj[i]<-(j1-dj)/j1
rot23$NF[i]<-(j2+a2+da-j1-a1)/a1
}
}
rot23
rot23[6,]
22/3
rot23[7,]
5/7
5/6
rot23[8,]
4/11
rot23[11,]
19/4
rot23[14,]
rot23[17,]
rot23[21,]
rot<-read.csv("rdata.csv", sep=",", header=T)
rot<-rot[,c(-3,-11)]
rot2<-subset(rot,Day==2)
rot3<-subset(rot,Day==3)
refr<-read.csv("BIO311_with_rates.csv",sep=",",header=T)
refr<-refr[,c(-1,-3,-6,-7,-8,-9,-10)]
rot23<-merge(rot2,rot3,by=c("Population","Copper","Replicate"))
rot23<-merge(rot23,refr,by=c("Population","Copper","Replicate"))
rot23$NPj<-NA
rot23$NPa<-NA
rot23$NF<-NA
for(i in 1:length(rot23$Population)){
j1<-rot23$Alive_Juv.x[i]
j2<-rot23$Alive_Juv.y[i]
a1<-rot23$Alive_Adult.x[i]
a2<-rot23$Alive_Adult.y[i]
da<-rot23$Dead_Adult.y[i]
dj<-rot23$Dead_Juv.y[i]
if(j1+a1>=da+a2){
if((a1-da)>=a2){
rot23$NPa[i]<-(da+a2-a1)/a1
rot23$NPj[i]<-0
rot23$NF[i]<-j2/a1
}else{
rot23$NPa[i]<-(a1-da)/a1
rot23$NPj[i]<-(a2-a1+da)/j1
rot23$NF[i]<-j2/a1
}
}else{
rot23$NPa[i]<-(a1-da)/a1
rot23$NPj[i]<-(j1-dj)/j1
rot23$NF[i]<-(j2+a2+da-j1-a1)/a1
}
}
rot23
rot<-read.csv("rdata.csv", sep=",", header=T)
rot<-rot[,c(-3,-11)]
rot2<-subset(rot,Day==2)
rot3<-subset(rot,Day==3)
refr<-read.csv("BIO311_with_rates.csv",sep=",",header=T)
refr<-refr[,c(-1,-3,-6,-7,-8,-9,-10)]
rot23<-merge(rot2,rot3,by=c("Population","Copper","Replicate"))
rot23<-merge(rot23,refr,by=c("Population","Copper","Replicate"))
rot23$NPj<-NA
rot23$NPa<-NA
rot23$NF<-NA
for(i in 1:length(rot23$Population)){
j1<-rot23$Alive_Juv.x[i]
j2<-rot23$Alive_Juv.y[i]
a1<-rot23$Alive_Adult.x[i]
a2<-rot23$Alive_Adult.y[i]
da<-rot23$Dead_Adult.y[i]
dj<-rot23$Dead_Juv.y[i]
if(j1+a1>=da+a2){
if((a1-da)>=a2){
rot23$NPa[i]<-a2/a1
rot23$NPj[i]<-0
rot23$NF[i]<-j2/a1
}else{
rot23$NPa[i]<-(a1-da)/a1
rot23$NPj[i]<-(a2-a1+da)/j1
rot23$NF[i]<-j2/a1
}
}else{
rot23$NPa[i]<-(a1-da)/a1
rot23$NPj[i]<-(j1-dj)/j1
rot23$NF[i]<-(j2+a2+da-j1-a1)/a1
}
}
rot23
head(rot23)
rot23$check=(abs(rot23$Pj-rot23$NPj)<0.1 & abs(rot23$Pa-rot23$NPa)<0.1 & abs(rot23$F-rot23$NF)<0.1)
rot23
rot23[22,]
rot<-read.csv("rdata.csv", sep=",", header=T)
rot<-rot[,c(-3,-11)]
rot2<-subset(rot,Day==2)
rot3<-subset(rot,Day==3)
refr<-read.csv("BIO311_with_rates.csv",sep=",",header=T)
refr<-refr[,c(-1,-3,-6,-7,-8,-9,-10)]
rot23<-merge(rot2,rot3,by=c("Population","Copper","Replicate"))
rot23<-merge(rot23,refr,by=c("Population","Copper","Replicate"))
rot23$NPj<-NA
rot23$NPa<-NA
rot23$NF<-NA
for(i in 1:length(rot23$Population)){
j1<-rot23$Alive_Juv.x[i]
j2<-rot23$Alive_Juv.y[i]
a1<-rot23$Alive_Adult.x[i]
a2<-rot23$Alive_Adult.y[i]
da<-rot23$Dead_Adult.y[i]
dj<-rot23$Dead_Juv.y[i]
if(j1+a1>=da+a2){
if((a1-da)>=a2){
rot23$NPa[i]<-a2/a1
rot23$NPj[i]<-0
rot23$NF[i]<-j2/a1
}else{
rot23$NPa[i]<-(a1-da)/a1
rot23$NPj[i]<-(a2-a1+da)/j1
rot23$NF[i]<-j2/a1
}
}else{
rot23$NPa[i]<-(a1-da)/a1
rot23$NPj[i]<-(j1-dj)/j1
rot23$NF[i]<-(j2+a2+da-j1-a1)/a1
}
if(j1==0){
rot23$NPj[i]<-NA
}
}
rot23$check=(abs(rot23$Pj-rot23$NPj)<0.1 & abs(rot23$Pa-rot23$NPa)<0.1 & abs(rot23$F-rot23$NF)<0.1)
rot23
rot23[25,]
rot23[26,]
rot23[29,]
rot<-read.csv("rdata.csv", sep=",", header=T)
rot<-rot[,c(-3,-11)]
rot2<-subset(rot,Day==2)
rot3<-subset(rot,Day==3)
refr<-read.csv("BIO311_with_rates.csv",sep=",",header=T)
refr<-refr[,c(-1,-3,-6,-7,-8,-9,-10)]
rot23<-merge(rot2,rot3,by=c("Population","Copper","Replicate"))
rot23<-merge(rot23,refr,by=c("Population","Copper","Replicate"))
rot23$NPj<-NA
rot23$NPa<-NA
rot23$NF<-NA
### DATA BIJMAKEN VOOR 1 casus
rot23$Alive_Adult.x[29]<-1
for(i in 1:length(rot23$Population)){
j1<-rot23$Alive_Juv.x[i]
j2<-rot23$Alive_Juv.y[i]
a1<-rot23$Alive_Adult.x[i]
a2<-rot23$Alive_Adult.y[i]
da<-rot23$Dead_Adult.y[i]
dj<-rot23$Dead_Juv.y[i]
if(j1+a1>=da+a2){
if((a1-da)>=a2){
rot23$NPa[i]<-a2/a1
rot23$NPj[i]<-0
rot23$NF[i]<-j2/a1
}else{
rot23$NPa[i]<-(a1-da)/a1
rot23$NPj[i]<-(a2-a1+da)/j1
rot23$NF[i]<-j2/a1
}
}else{
rot23$NPa[i]<-(a1-da)/a1
rot23$NPj[i]<-(j1-dj)/j1
rot23$NF[i]<-(j2+a2+da-j1-a1)/a1
}
if(j1==0){
rot23$NPj[i]<-NA
}
}
rot23$check=(abs(rot23$Pj-rot23$NPj)<0.1 & abs(rot23$Pa-rot23$NPa)<0.1 & abs(rot23$F-rot23$NF)<0.1)
rot23
rot23[31,]
rot23[36,]
5/6
rot23[37,]
rot23[39,]
rot23[46,]
rot23[53,]
rot23[57,]
rot23[61,]
rot23[68,]
rot23[c(6,7,8,11,25,26,31,36,53,57,61),1:4]
rot23[c(14,17,37,39,46),1:4]
A <- matrix(c(0.2,0.4,0.8,0.5,0.4,0,0,0.3,0.6),byrow=TRUE)
A
A <- matrix(c(0.2,0.4,0.8,0.5,0.4,0,0,0.3,0.6),ncol=3,byrow=TRUE)
A
eigen(A)
vecs <- eigen(A)$vectors
n <- c(10,5,7)
vecs[,1] %*% n
vecs[,2] %*% n
vecs[,3] %*% n
a1 <- vecs[,1] %*% n
a2 <- vecs[,2] %*% n
a3 <- vecs[,3] %*% n
a1
a2
a3
eigen(a)$values
eigen(A)$values
n <- c(10,5,7)
a1 <- vecs[,1] %*% n
a2 <- vecs[,2] %*% n
a3 <- vecs[,3] %*% n
dir <- function(t){
c(a1,a2,a3)*eigen(A)$values^t
}
dir(4)
dir(0)
dir(0)%*%vecs
dir(0)%*%t(vecs)
vecs%*%dir(0)#%*%t(vecs)
vecs%*%dir(1)#%*%t(vecs)
vecs%*%dir(100)#%*%t(vecs)
vecs%*%dir(0)#%*%t(vecs)
vecsl <- eigen(t(A))$vectors
vecsl%*%dir(0)#%*%t(vecs)
t(vecsl)%*%dir(0)#%*%t(vecs)
dir(0)%*%t(vecsl)
dir(0)%*%(vecsl)
vecs%8%vecsl
vecs%*%vecsl
vecs%*%t(vecsl)
t(vecs)%*%t(vecsl)
vecs
vecsl
vecs[,1]%*%vecsl[1,]
vecs[,1]%*%vecsl[,1]
vecs[,2]%*%vecsl[,2]
vecs[,3]%*%vecsl[,3]
vecs
vecs[,2]
t(vecs[,2])
Conj(vecs[,2])
Conj(vecsl)
c <- numeric(3)
for(i in 1:3){
c[i] <- vecsl[i,]%*%n
}
c
for(i in 1:3){
c[i] <- vecsl[i,]%*%n / (vecsl[i,]%*%vecs[,i])
}
c
A <- matrix(c(0.2,0.4,0.8,0.5,0.4,0,0,0.3,0.6),ncol=3,byrow=TRUE)
vecs <- eigen(A)$vectors
vecsl <- Conj(eigen(t(A))$vectors)
n <- c(10,5,7)
c <- numeric(3)
t <- 0
for(i in 1:3){
c[i] <- vecsl[i,]%*%n / (vecsl[i,]%*%vecs[,i])
}
tmp <-  c*eigen(A)$values^t
ans <- rep(0,3)
for(j in 1:3){
ans <- ans + tmp[j]*vecs[,j]
}
ans
A <- matrix(c(0.2,0.4,0.8,0.5,0.4,0,0,0.3,0.6),ncol=3,byrow=TRUE)
vecs <- eigen(A)$vectors
vecsl <- Conj(eigen(t(A))$vectors)
n <- c(10,5,7)
c <- numeric(3)
t <- 0
for(i in 1:3){
c[i] <- vecsl[,i]%*%n / (vecsl[,i]%*%vecs[,i])
}
tmp <-  c*eigen(A)$values^t
ans <- rep(0,3)
for(j in 1:3){
ans <- ans + tmp[j]*vecs[,j]
}
and
ans
c
eigen(A)$values^t
ans
vecs
(vecsl[,i]%*%vecs[,i])
(vecsl[i,]%*%vecs[,i])
A <- matrix(c(0.2,0.4,0.8,0.5,0.4,0,0,0.3,0.6),ncol=3,byrow=TRUE)
vecs <- eigen(A)$vectors
vecsl <- Conj(eigen(t(A))$vectors)
n <- c(10,5,7)
c <- numeric(3)
t <- 0
for(i in 1:3){
c[i] <- vecsl[i,]%*%n / (vecsl[i,]%*%vecs[,i])
}
tmp <-  c*eigen(A)$values^t
ans <- rep(0,3)
for(j in 1:3){
ans <- ans + tmp[j]*vecs[,j]
}
ans
A <- matrix(c(0.2,0.4,0.8,0.5,0.4,0,0,0.3,0.6),ncol=3,byrow=TRUE)
vecs <- eigen(A)$vectors
vecsl <- Conj(eigen(t(A))$vectors)
n <- c(10,5,7)
c <- numeric(3)
t <- 0
for(i in 1:3){
c[i] <- vecsl[i,]%*%n / (Conj(vecsl[i,])%*%vecs[,i])
}
tmp <-  c*eigen(A)$values^t
ans <- rep(0,3)
for(j in 1:3){
ans <- ans + tmp[j]*vecs[,j]
}
ans
(Conj(vecsl[i,])%*%vecs[,i])
vecsl[1,]%*%A
eigen(A)$values[1]*vecsl[1,]
eigen(t(A))$values[1]*vecsl[1,]
eigen(t(A))$values[1]*vecsl[,1]
eigen(t(A))$values[2]*vecsl[,1]
eigen(t(A))$values[3]*vecsl[,1]
Conj(vecsl[1,])%*%A
Conj(vecsl[,1])%*%A
A <- matrix(c(0.2,0.4,0.8,0.5,0.4,0,0,0.3,0.6),ncol=3,byrow=TRUE)
vecs <- eigen(A)$vectors
vecsl <- Conj(eigen(t(A))$vectors)
n <- c(10,5,7)
c <- numeric(3)
t <- 0
for(i in 1:3){
c[i] <- vecsl[,i]%*%n / (Conj(vecsl[,i])%*%vecs[,i])
}
tmp <-  c*eigen(A)$values^t
ans <- rep(0,3)
for(j in 1:3){
ans <- ans + tmp[j]*vecs[,j]
}
A
ans
eigen(A)
eigen(t(A))
A <- matrix(c(0.2,0.4,0.8,0.5,0.4,0,0,0.3,0.6),ncol=3,byrow=TRUE)
vecs <- eigen(A)$vectors
vecsl <- Conj(eigen(t(A))$vectors)
n <- c(10,5,7)
c <- numeric(3)
t <- 0
for(i in 1:3){
c[i] <- vecsl[,i]%*%n / (vecsl[,i]%*%vecs[,i])
}
tmp <-  c*eigen(A)$values^t
ans <- rep(0,3)
for(j in 1:3){
ans <- ans + tmp[j]*vecs[,j]
}
ans
A <- matrix(c(0.2,0.4,0.8,0.5,0.4,0,0,0.3,0.6),ncol=3,byrow=TRUE)
vecs <- eigen(A)$vectors
vecsl <- (eigen(t(A))$vectors)
n <- c(10,5,7)
c <- numeric(3)
t <- 0
for(i in 1:3){
c[i] <- vecsl[,i]%*%n / (vecsl[,i]%*%vecs[,i])
}
tmp <-  c*eigen(A)$values^t
ans <- rep(0,3)
for(j in 1:3){
ans <- ans + tmp[j]*vecs[,j]
}
ans
A <- matrix(c(0.2,0.4,0.8,0.5,0.4,0,0,0.3,0.6),ncol=3,byrow=TRUE)
vecs <- eigen(A)$vectors
vecsl <- (eigen(t(A))$vectors)
n <- c(10,5,7)
c <- numeric(3)
t <- 2
for(i in 1:3){
c[i] <- vecsl[,i]%*%n / (vecsl[,i]%*%vecs[,i])
}
tmp <-  c*eigen(A)$values^t
ans <- rep(0,3)
for(j in 1:3){
ans <- ans + tmp[j]*vecs[,j]
}
ans
A%*%A%*%n
c
