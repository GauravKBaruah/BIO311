}
if(!cop %in% c(levels(roti$Copper),"mean")){
warning("Something went wrong, give the instructors a cookie and they may help you out:\n------------------------\n ",cop," is not a valid entry\n------------------------\n")
return()
}
if(pop=="mean" & cop=="mean"){
i<-1:length(roti$Copper)
}else if(pop=="mean"){
i<-which(roti$Copper==cop)
}else if(cop=="mean"){
i<-which(roti$Population==pop)
}else{
i<-which(roti$Population==pop & roti$Copper==cop)
}
A<-matrix(c(0, mean(roti$Pj[i]), mean(roti$F[i]), mean(roti$Pa[i])), nrow=2, ncol=2)
return(A)
}
#--------------------------end of the function-----------------#
#Get the matrices we are interested in (for Species BC)
library(popbio)
a<-'Postpollution'
ash<-'Post' # Short name for layer a
b<-'Recovery'
bsh<-'Rec' # Short name for layer b
Rotisub <- subset(Roti, Roti$Population==a | Roti$Population==b)
Rotisub
#Here let us do the LTRE
#two factors: population (1) and Copper (2)
#The average matrix:
M<-get_matrix(Rotisub, "mean", "mean")
#First the effect of population (1)-> alpha
Pop1<-get_matrix(Rotisub, a, "mean")
#Population level 3->Postpollution
#Population level 1->Pollution
#Pollution
#The mid-way matrix
A<-((M+Pop1)/2)
alpha1<-(Pop1-M)*sensitivity(A)
alpha1
#Recovery
Pop2<-get_matrix(Rotisub, b, "mean")
#The mid-way matrix
B<-((M+Pop2)/2)
alpha2<-(Pop2-M)*sensitivity(B)
alpha2
#Second the effect of Copper (2)-> beta
hig<-get_matrix(Rotisub, "mean", "high")
med<-get_matrix(Rotisub, "mean", "medium")
low<-get_matrix(Rotisub, "mean", "low")
#Copper level 1->High
#Copper leve 2->Medium
#Copper leve 3->Low
#High
#The mid-way matrix
#for beta:
C<-((M+hig)/2)
beta1<-(hig-M)*sensitivity(C)
beta1
#Medium
#The mid-way matrix
#for beta:
D<-((M+med)/2)
beta2<-(med-M)*sensitivity(D)
beta2
#Low
#The mid-way matrix
#for beta:
E<-((M+low)/2)
beta3<-(low-M)*sensitivity(E)
beta3
#Interactions
#Here let us extract the 6 matrices we need:
Pop1h<-get_matrix(Rotisub, a, "high")
Pop1m<-get_matrix(Rotisub, a, "medium")
Pop1l<-get_matrix(Rotisub, a, "low")
Pop2h<-get_matrix(Rotisub, b, "high")
Pop2m<-get_matrix(Rotisub, b, "medium")
Pop2l<-get_matrix(Rotisub, b, "low")
#The mid-way matrix
#for alpha:beta:
F<-((M+Pop1h)/2)
inter1<-((Pop1h-M)*sensitivity(F))-alpha1-beta1
inter1
#The mid-way matrix
#for alpha:beta:
G<-((M+Pop1m)/2)
#The loop
inter2<-((Pop1m-M)*sensitivity(G))-alpha1-beta2
inter2
#The mid-way matrix
#for alpha:beta:
H<-((M+Pop1l)/2)
inter3<-((Pop1l-M)*sensitivity(H))-alpha1-beta3
inter3
#The mid-way matrix
#for alpha:beta:
I<-((M+Pop2h)/2)
inter4<-((Pop2h-M)*sensitivity(I))-alpha2-beta1
inter4
#The mid-way matrix
#for alpha:beta:
J<-((M+Pop2m)/2)
inter5<-((Pop2m-M)*sensitivity(J))-alpha2-beta2
inter5
#The mid-way matrix
#for alpha:beta:
K<-((M+Pop2l)/2)
inter6<-((Pop2l-M)*sensitivity(K))-alpha2-beta3
inter6
######### ARRANGING THE DATA FOR PLOTTING ##############
#Copper
Copper <- cbind(as.vector(beta1)[2:4], as.vector(beta2)[2:4], as.vector(beta3)[2:4])
colnames(Copper) <- c("High", "Medium", "Low")
rownames(Copper) <- c("Pj", "F", "Pa")
Copper
Coppert<-t(Copper)
#Layer
Layer <- cbind(as.vector(alpha1)[2:4], as.vector(alpha2)[2:4])
colnames(Layer) <- c(a, b)
rownames(Layer) <- c("Pj", "F", "Pa")
Layer
Layert<-t(Layer)
#Interactions
Interactions <- cbind(as.vector(inter1)[2:4], as.vector(inter2)[2:4], as.vector(inter3)[2:4], as.vector(inter4)[2:4], as.vector(inter5)[2:4], as.vector(inter6)[2:4])
colnames(Interactions) <- axislabels
rownames(Interactions) <- c("Pj", "F", "Pa")
Interactions
Interactionst<-t(Interactions)
# Plotting
ymin<-min(c(min(Layer),min(Copper),min(Interactions)))
ymax<-max(c(max(Layer),max(Copper),max(Interactions)))
ylim<-max(c(ymax,abs(ymin)))
limits<-c(-ylim,ylim)
#graphs
par(mfrow=c(1,3))
barplot(Coppert,xaxt='n', xlab="", ylab="Parameters contribution", ylim=limits, xlim=c(0,14), col=c("brown","orange", "yellow"), beside=TRUE, main="Copper level")
segments(-1,0, 13,0)
par(mar=c(5.1, 5.1, 4.1, 5.1), xpd=TRUE)
legend("topleft",
c("High", "Medium", "Low"), fill=c("brown","orange", "yellow"),  bty="n")
axis(side=1, at=c(3,7,11), labels=c( "Pj", "F", "Pa"), line=1, tick=FALSE)
barplot(Layert,xaxt='n', xlab="", ylab="Parameters contribution", ylim=limits, xlim=c(0,14), col=c("blue","lightblue"), beside=TRUE, main="Layer")
segments(-1,0, 10,0)
par(mar=c(5.1, 5.1, 4.1, 5.1), xpd=TRUE)
legend("topleft",
c(a,b), fill=c("blue","lightblue"), bty="n")
axis(side=1, at=c(2,5,8), labels=c( "Pj", "F", "Pa"), line=1, tick=FALSE)
#Interaction
#Layer
axislabels<-c()
for(i in c(ash,bsh)){
for(j in c("H","M","L")){
axislabels<-c(axislabels,paste(i,j,sep=""))
}
}
axislabels2<-c()
for(i in c(ash,bsh)){
for(j in c("hig","med","low")){
axislabels2<-c(axislabels2,paste(i,j,sep=", "))
}
}
rainbow(6,start = 0, end = 0.5, alpha = 0.7)
library("RColorBrewer")
barplot(Interactionst, xaxt='n', xlab="", ylab="Parameters contribution", ylim=limits, xlim=c(0,20), col=brewer.pal(6, "Set3") , beside=TRUE, main="Interactions")
segments(-1,0, 20,0)
par(mar=c(5.1, 5.1, 4.1, 5.1), xpd=TRUE)
legend("topleft",
axislabels2, fill=brewer.pal(6, "Set3"), bty="n", ncol=2)
axis(side=1, at=c(5,12,18), labels=c( "Pj", "F", "Pa"), line=1, tick=FALSE)
limits
?sample
gl<-list(A=A,B=B,C=C)
gl
sample(gl)
sample(gl,1)
sample(gl,2)
sample(gl,1)
gl<-c(A=A,B=B,C=C)
gl
sample(gl,2)
gl<-list(A=A,B=B,C=C)
gl
gl<-list(A,B,C)
gl
sample(gl,1)
sample(gl,1)%*%c(6,4)
sample(gl,1)[[1]]%*%c(6,4)
as.matrix(sample(gl,1)[[1]])%*%(6,4)
as.matrix(sample(gl,1)[[1]])%*%c(6,4)
A%*%c(6,4)
B%*%c(6,4)
C%*%c(6,4)
as.matrix(sample(gl,1)[[1]])%*%c(6,4)
as.matrix(sample(gl,1)[[1]])%*%c(6,4)
as.matrix(sample(gl,1))%*%c(6,4)
as.matrix(sample(gl,1))
as.matrix(sample(gl,1)[2])
as.matrix(sample(gl,1)[3])
str((sample(gl,1)))
sample(gl,1)%*%c(6,4)
sample(gl,1)[[1]]%*%c(6,4)
sample(gl,1)[1]%*%c(6,4)
sample(c(1,2,3),1,prob=c(4/7,2/7,1/7))
sample(c(1,2,3),1,prob=c(4/7,2/7,1/7))
sample(c(1,2,3),1,prob=c(4/7,2/7,1/7))
sample(c(1,2,3),1,prob=c(4/7,2/7,1/7))
sample(c(1,2,3),1,prob=c(4/7,2/7,1/7))
?sim.vit
?vit.sim
elasticity
library('popbio')
elasticity
sensitivity
A<-matrix(c(0,0,0,4,0,1,5,0,0),nrow=3)
A
A%*%c(0,1,0)
A%*%A%*%c(0,1,0)
eigen(t(A))
A
eigen(A)
A<-matrix(c(0,1,0,4,0,1,5,0,0),nrow=3)
A
eigen(t(A))
A
eigen(A)
eigen(t(A))
eigen(t(A))$vectors/(-0.2991066)
eigen(A)
A
eigen(A)
eigen(t(A))$vectors/(-0.2991066)
eigen(t(A))$vectors/
1
A
A<-matrix(c(0,1,0,5,0,1,4,0,0),nrow=3)
A
eigen(A)
eigen(t(A))
eigen(t(A))$vectors/(0.3162278)
4/9
5/9
?eigen
eigen(t(A))$vectors[,1]
lvec<-eigen(t(A))$vectors[,1]
(lvec%*%A)/lvec
lvec<-eigen(t(A))$vectors[1,]
lvec<-eigen(t(A))$vectors[,1]
lvec<-eigen(t(A))$vectors[1,]
(lvec%*%A)/lvec
load("/Users/koen/Dropbox/Decomposing pop dynamics/Dataset.R/Data-Clean/Code Marjolein/GPE_marjob1.RData")
head(analysis)
unlist(analysis)
do.call(rbind.data.frame, analysis)
do.call(rbind.data.frame, analysis)[1,]
data.frame(Reduce(rbind,analysis))
load("/Users/koen/Dropbox/Decomposing pop dynamics/Dataset.R/Data-Clean/Code Marjolein/APE_marjob1.RData")
head(analysis)
load("/Users/koen/Dropbox/Decomposing pop dynamics/Dataset.R/Data-Clean/Code Marjolein/GPE_marjob1.RData")
m1 <- data.frame(Reduce(rbind,analysis))
load("/Users/koen/Dropbox/Decomposing pop dynamics/Dataset.R/Data-Clean/Code Marjolein/GPE_marjob2.RData")
m2 <- data.frame(Reduce(rbind,analysis))
load("/Users/koen/Dropbox/Decomposing pop dynamics/Dataset.R/Data-Clean/Code Marjolein/GPE_marjob3.RData")
m3 <- data.frame(Reduce(rbind,analysis))
load("/Users/koen/Dropbox/Decomposing pop dynamics/Dataset.R/Data-Clean/Code Marjolein/GPE_marjob4.RData")
m4 <- data.frame(Reduce(rbind,analysis))
summary(m1)
summary(m2)
summary(m3)
summary(m4)
load("/Users/koen/Dropbox/Decomposing pop dynamics/Dataset.R/Data-Clean/Code Marjolein/APE_marjob1.RData")
a1 <- data.frame(Reduce(rbind,analysis))
head(a1)
tail(a1)
lapply(analysis,function(x) colMeans(x[10:nrow(x),]))
p1 <- lapply(analysis,function(x) colMeans(x[10:nrow(x),]))
a1 <- data.frame(Reduce(rbind,p1))
a1
load("/Users/koen/Dropbox/Decomposing pop dynamics/Dataset.R/Data-Clean/Code Marjolein/APE_marjob1.RData")
p1 <- lapply(analysis,function(x) colMeans(x[10:nrow(x),]))
a1 <- data.frame(Reduce(rbind,p1))
load("/Users/koen/Dropbox/Decomposing pop dynamics/Dataset.R/Data-Clean/Code Marjolein/APE_marjob2.RData")
p2 <- lapply(analysis,function(x) colMeans(x[10:nrow(x),]))
a2 <- data.frame(Reduce(rbind,p2))
load("/Users/koen/Dropbox/Decomposing pop dynamics/Dataset.R/Data-Clean/Code Marjolein/APE_marjob3.RData")
p3 <- lapply(analysis,function(x) colMeans(x[10:nrow(x),]))
a3 <- data.frame(Reduce(rbind,p3))
load("/Users/koen/Dropbox/Decomposing pop dynamics/Dataset.R/Data-Clean/Code Marjolein/APE_marjob4.RData")
p4 <- lapply(analysis,function(x) colMeans(x[10:nrow(x),]))
a4 <- data.frame(Reduce(rbind,p4))
## sh
summary(a1)
## Sh
summary(a2)
## sH
summary(a3)
## SH
summary(a4)
## sh
summary(a1)
summary(a3)
## Sh
summary(a2)
## SH
summary(a4)
a4$ODC
mean(a4$ODC)
mean(a1$ODC)
mean(a2$ODC)
mean(a3$ODC)
mean(a4$ODC)
mean(a1$OMD)
mean(a2$OMD)
mean(a3$OMD)
mean(a4$OMD)
mean(a1$ODC)+mean(a1$OMD)
mean(a2$ODC)+mean(a2$OMD)
mean(a3$ODC)+mean(a3$OMD)
mean(a4$ODC)+mean(a4$OMD)
?t
B <- matrix(c(0.5,0.3,0.7,0.9,0.3,0.2,0.4,0.8,1,0),nrow=3)
B <- matrix(c(0.5,0.3,0.7,0.9,0.3,0.2,0.4,0.8,0),nrow=3)
?Re
1+2i
matrix(c(1+2i,3,4,2),nrow=2)
Re(matrix(c(1+2i,3,4,2),nrow=2))
A <- matrix(c(0.5,0.3,0.75,0.9),nrow=2)
sens(A)
sens1(A)
library(popbio)
sensitivity(A)
Rot <- read.csv("/Users/koen/Documents/Given Courses/BIO311/Prac 9/rotifer_data.csv")[,2:9]
xtable(Rot$Copper)
table(Rot$Copper)
Rot$Copper[Rot$Copper==1000] <- 100
table(Rot$Layer)
Rot$Layer[Rot$Layer=="Post"] <- "post"
write.csv(Rot,"/Users/koen/Documents/Given Courses/BIO311/Prac 9/rotifer_data.csv")
rm(list=ls())
Rot <- read.csv("/Users/koen/Documents/Given Courses/BIO311/Prac 9/rotifer_data.csv")[,2:9]
table(Rot$Copper)
table(Rot$Layer)
rm(list=ls())
Rot <- read.csv("/Users/koen/Documents/Given Courses/BIO311/Prac 9/rotifer_data.csv")
Rot
Rot <- read.csv("/Users/koen/Documents/Given Courses/BIO311/Prac 9/rotifer_data.csv")[-1]
Rot
write.csv(Rot,"/Users/koen/Documents/Given Courses/BIO311/Prac 9/rotifer_data.csv",row.names=FALSE)
Rot <- read.csv("/Users/koen/Documents/Given Courses/BIO311/Prac 9/rotifer_data.csv")
Rot
Rot <- read.csv("/Users/koen/Documents/Given Courses/BIO311/Prac 6/rotifer_data.csv")
Rot
Rot <- read.csv("/Users/koen/Documents/Given Courses/BIO311/Prac 6/rotifer_data.csv")
Rot <- read.csv("/Users/koen/Documents/Given Courses/BIO311/Prac 9/rotifer_data.csv")
Roti<-reshape(Rot,timevar="Day",idvar=c("Clone","Copper","Layer"),direction="wide")
Rates <- Roti[,1:3]
Rates$Sa1 <- (Roti$Live_Adult.1 - Roti$Dead_Adult.2)/ Roti$Live_Adult.1
Rates
summary(Rates$Sa1)
Rates$Sa2 <- (Roti$Live_Adult.2 - Roti$Dead_Adult.3)/ Roti$Live_Adult.2
summary(Rates$Sa2)
Rates$M1 <- (Roti$Live_Adult.2 + Roti$Dead_Adult.2 - Roti$Live_Adult.1) / Roti$Live_Juv.1
Rates$Sj1 <- (Roti$Live_Juv.1 - (Roti$Live_Adult.2 + Roti$Dead_Adult.2 - Roti$Live_Adult.1) - Roti$Dead_Juv.2)/Roti$Live_Juv.1
Rates$R1 <- (Roti$Live_Juv.2 - Roti$Live_Juv.1*Rates$Sj1) / Roti$Live_Adult.1
Rates
Rates$M1[Rates$M1>1] <- 1
summary(Rates$M1)
Rates$Sj1 <- (Roti$Live_Juv.1 - Roti$Dead_Juv.2 - Roti$Live.Juv.1*Rates$M1) / Roti$Live_Juv.1
head(roti)
head(Roti)
Rates$Sj1 <- (Roti$Live_Juv.1 - Roti$Dead_Juv.2 - Roti$Live_Juv.1*Rates$M1) / Roti$Live_Juv.1
Rates
Rates$Sj1 <- (Roti$Live_Juv.1 - Roti$Dead_Juv.2 - Roti$Live_Juv.1*Rates$M1) / Roti$Live_Juv.1
summary(Rates$Sj1)
Rates$R1 <- (Roti$Live_Juv.2 - Roti$Live_Juv.1*Rates$Sj1) / Roti$Live_Adult.1
summary(Rates)
Rates$M2 <- (Roti$Live_Adult.3 + Roti$Dead_Adult.3 - Roti$Live_Adult.2) / Roti$Live_Juv.2
summary(Rates)
Rates$Sj2 <- (Roti$Live_Juv.2 - Roti$Dead_Juv.3 - Roti$Live_Juv.2*Rates$M2) / Roti$Live_Juv.2
summary(Rates)
boxplot(Sj2 ~ copper)
boxplot(Sj2 ~ copper,Rates)
boxplot(Sj2 ~ Copper,Rates)
boxplot(Sj2 + M2~ Copper,Rates)
boxplot(.~ Copper,Rates)
boxplot(.~ Copper+Layer,Rates)
boxplot(Sj2~ Copper+Layer,Rates)
boxplot(M2~ Copper+Layer,Rates)
library(ggplot)
library(ggplot2)
ggplot(Rates, aes(Sj2,group=Copper))
ggplot(Rates, aes(Sj2,group=Copper))+geom_boxplot()
boxplot(M2~ Copper+Layer,Rates)
library(tidyr)
install.packages("tidyr")
gather_(Rates,"Rate","Value",c("Sj1","Sa1","M1","R1"))
library(tidyr)
gather_(Rates,"Rate","Value",c("Sj1","Sa1","M1","R1"))
Rates_plot <- gather_(Rates,"Rate","Value",c("Sj1","Sa1","M1","R1"))
boxplot(value~Rate+Copper,Rates_plot)
boxplot(Value~Rate+Copper,Rates_plot)
boxplot(Value~Rate+Layer,Rates_plot)
boxplot(Value~Rate+Copper,Rates_plot)
boxplot(Value~Copper+Rate,Rates_plot)
boxplot(Value~Layer+Rate,Rates_plot)
summary(Rates)
Rates_plot <- gather_(Rates,"Rate","Value",c("Sj2","Sa2","M2","R2"))
Roti<-reshape(Rot,timevar="Day",idvar=c("Clone","Copper","Layer"),direction="wide")
Rates <- Roti[,1:3]
Rates$Sa1 <- (Roti$Live_Adult.1 - Roti$Dead_Adult.2)/ Roti$Live_Adult.1
Rates$M1 <- (Roti$Live_Adult.2 + Roti$Dead_Adult.2 - Roti$Live_Adult.1) / Roti$Live_Juv.1
summary(Rates)
Rates$M1[Rates$M1 > 1] <- 1
Rates$Sj1 <- (Roti$Live_Juv.1 - Roti$Dead_Juv.2 - Roti$Live_Juv.1*Rates$M1) / Roti$Live_Juv.1
Rates$Sj1[Rates$Sj1 < 0] <- 0
summary(Rates)
Rates$R1 <- (Roti$Live_Juv.2 - Roti$Live_Juv.1*Rates$Sj1) / Roti$Live_Adult.1
summary(Rates)
Rates$Sa2 <- (Roti$Live_Adult.2 - Roti$Dead_Adult.3)/ Roti$Live_Adult.2
Rates$M2 <- (Roti$Live_Adult.3 + Roti$Dead_Adult.3 - Roti$Live_Adult.2) / Roti$Live_Juv.2
Rates$Sj2 <- (Roti$Live_Juv.2 - Roti$Dead_Juv.3 - Roti$Live_Juv.2*Rates$M2) / Roti$Live_Juv.2
Rates$Sj2[Rates$Sj2 < 0] <- 0
Rates$R2 <- (Roti$Live_Juv.3 - Roti$Live_Juv.2*Rates$Sj2) / Roti$Live_Adult.2
summary(Rates)
Rates$M2[Rates$M2 > 1] <- 1
Rates$Sj2 <- (Roti$Live_Juv.2 - Roti$Dead_Juv.3 - Roti$Live_Juv.2*Rates$M2) / Roti$Live_Juv.2
Rates$Sj2[Rates$Sj2 < 0] <- 0
Rates$R2 <- (Roti$Live_Juv.3 - Roti$Live_Juv.2*Rates$Sj2) / Roti$Live_Adult.2
summary(Rates)
Rates$Sa2 <- (Roti$Live_Adult.2 - Roti$Dead_Adult.3)/ Roti$Live_Adult.2
Rates$M2 <- (Roti$Live_Adult.3 + Roti$Dead_Adult.3 - Roti$Live_Adult.2) / Roti$Live_Juv.2
Rates$M2[Rates$M2 > 1] <- 1
Rates$Sj2 <- (Roti$Live_Juv.2 - Roti$Dead_Juv.3 - Roti$Live_Juv.2*Rates$M2) / Roti$Live_Juv.2
Rates$Sj2[Rates$Sj2 < 0] <- 0
Rates$R2 <- (Roti$Live_Juv.3 - Roti$Live_Juv.2*Rates$Sj2) / Roti$Live_Adult.2
summary(Rates)
Rates
Roti
roti[53,]
Roti[53,]
Rates[53,]
Roti[53,8:15]
matrix(Roti[53,8:15],nrow=4,byrow=T)
matrix(Roti[53,8:15],ncol=4,byrow=T)
Rates[53,]
1/6
Rates$R2[Rates$R2 < 0] <- 0
summary(Rates)
Rates_plot <- gather_(Rates,"Rate","Value",c("Sj2","Sa2","M2","R2"))
boxplot(Value~Copper+Rate,Rates_plot)
boxplot(Value~Layer+Rate,Rates_plot)
ggplot(Rates_plot,aes(Value,Copper))
ggplot(Rates_plot,aes(Value,Copper)) + geom_boxplot()
ggplot(Rates_plot,aes(Copper,Value)) + geom_boxplot()
ggplot(Rates_plot,aes(factor(Copper),Value)) + geom_boxplot()
ggplot(Rates_plot,aes(factor(Copper),Value,fill=rate)) + geom_boxplot()
head(Rates_plot)
ggplot(Rates_plot,aes(factor(Copper),Value,fill=Rate)) + geom_boxplot()
roti
Roti
18*3
Rates$SaM <- (Rates$Sa1 + Rates$Sa2)/2
Rates$MM <- (Rates$M1 + Rates$M2)/2
Rates$SjM <- (Rates$Sj1 + Rates$Sj2)/2
Rates$RM <- (Rates$R1 + Rates$R2)/2
Rates2 <- Rates[,c('Copper','Layer','SaM','MM','SjM','RM')]
Rates3 <- aggregate( .~ Copper+Layer,Rates2,mean)
Rates3$lambda <- NA
Rates$lambda <- NA
for(i in 1:nrow(Rates3)){
Mat <- matrix(c(Rates3$SjM[i],Rates3$MM[i],Rates3$RM[i],Rates3$SaM[i]),nrow=2)
Rates3$lambda[i] <- eigen(Mat)$values[1]
}
for(i in 1:nrow(Rates)){
Mat <- matrix(c(Rates$SjM[i],Rates$MM[i],Rates$RM[i],Rates$SaM[i]),nrow=2)
Rates$lambda[i] <- eigen(Mat)$values[1]
}
summary(Rates)
boxplot(lambda~Copper,Rates)
boxplot(lambda~Layer,Rates)
boxplot(lambda~Layer+Copper,Rates)
boxplot(lambda~Copper+Layer,Rates)
MatMean <- matrix(c(mean(Rates3$SjM),mean(Rates3$MM),mean(Rates3$RM),mean(Rates3$SaM)),nrow=2)
MatMean
MatMean <- matrix(c(mean(Rates$SjM),mean(Rates$MM),mean(Rates$RM),mean(Rates$SaM)),nrow=2)
MatMean
aggregate(.~Copper,Rates,mean)
aggregate(SaM~Copper,Rates,mean)
aggregate(SaM+MM~Copper,Rates,mean)
temp  <- Rates3[,c('Copper','SaM','MM','SjM','RM')]
tempc <- aggregate(.~Copper,temp,mean)
tempc
temp  <- Rates[,c('Copper','SaM','MM','SjM','RM')]
tempc <- aggregate(.~Copper,temp,mean)
tempc
copper <- list(3)
for(i in 1:3){
mat <- matrix(c(tempc$SjM[i],tempc$MM[i],tempc$RM[i],tempc$SaM[i]),nrow=2)
copper[[i]] <- LTRE(mat,MatMean)
}
names(copper) <- tempc$Copper
copper[['100']]
copper[['50']]
temp2  <- Rates3[,c('Copper','Layer','SaM','MM','SjM','RM')]
temp2  <- Rates[,c('Copper','Layer','SaM','MM','SjM','RM')]
tempi <- aggregate(.~Copper+Layer,temp,mean)
temp2
tempi <- aggregate(.~Copper+Layer,temp2,mean)
tempi
temp2  <- Rates[,c('Copper','Layer','SaM','MM','SjM','RM')]
tempi <- aggregate(.~Copper+Layer,temp2,mean)
temp  <- Rates[,c('Layer','SaM','MM','SjM','RM')]
templ <- aggregate(.~Layer,temp,mean)
